<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Synapse.Operator.Application</name>
    </assembly>
    <members>
        <member name="T:Synapse.Operator.Application.Configuration.ApplicationOptions">
            <summary>
            Represents the options used to configure the Synapse Operator
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Configuration.ApplicationOptions.Runner">
            <summary>
            Gets the options used to configure a Synapse Runner
            </summary>
        </member>
        <member name="T:Synapse.Operator.Application.Configuration.ConfigurationExtensions">
            <summary>
            Defines configuration extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>s
            </summary>
        </member>
        <member name="M:Synapse.Operator.Application.Configuration.ConfigurationExtensions.AddSynapseOperator(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            Adds and configures the services required by the Synapse Operator runtime
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configuration">The current <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="environment">The current <see cref="T:Microsoft.Extensions.Hosting.IHostEnvironment"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Synapse.Operator.Application.Configuration.RunnerOptions">
            <summary>
            Represents the options used to configure a Synapse Runner
            </summary>
        </member>
        <member name="F:Synapse.Operator.Application.Configuration.RunnerOptions.DefaultDeploymentFilePath">
            <summary>
            Gets the default Runner deployment file path
            </summary>
        </member>
        <member name="F:Synapse.Operator.Application.Configuration.RunnerOptions.DefaultNamespace">
            <summary>
            Gets the default namespace for Synapse Runner deployments
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Configuration.RunnerOptions.DeploymentFilePath">
            <summary>
            Gets the Runner's deployment file path
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Configuration.RunnerOptions.Namespace">
            <summary>
            Gets the namespace for Synapse Runner deployments
            </summary>
        </member>
        <member name="T:Synapse.Operator.Application.Services.V1WorkflowController">
            <summary>
            Represents the service used to manage <see cref="T:Synapse.Domain.Models.V1Workflow"/>s
            </summary>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,k8s.IKubernetes,Neuroglia.K8s.IResourceWatcherFactory,Microsoft.Extensions.Options.IOptions{Neuroglia.K8s.ResourceControllerOptions{Synapse.Domain.Models.V1Workflow}},Microsoft.Extensions.Options.IOptions{Synapse.Operator.Application.Configuration.ApplicationOptions},Synapse.Services.IRepository{Synapse.Domain.Models.V1Workflow},Synapse.Services.IRepository{Synapse.Domain.Models.V1WorkflowInstance},Synapse.Services.IRepository{Synapse.Domain.Models.V1Trigger})">
            <summary>
            Initializes a new <see cref="T:Synapse.Operator.Application.Services.V1WorkflowController"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="kubernetes">The service used to interact with Kubernetes</param>
            <param name="resourceWatcherFactory">The service used to create <see cref="T:Neuroglia.K8s.IResourceWatcher"/>s</param>
            <param name="options">The current <see cref="T:Neuroglia.K8s.ResourceControllerOptions`1"/></param>
            <param name="applicationOptions">The current <see cref="T:Synapse.Operator.Application.Configuration.ApplicationOptions"/></param>
            <param name="workflows">The <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Workflow"/>s</param>
            <param name="workflowInstances">The <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>s</param>
            <param name="triggers">The <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Trigger"/>s</param>
        </member>
        <member name="P:Synapse.Operator.Application.Services.V1WorkflowController.ApplicationOptions">
            <summary>
            Gets the current <see cref="T:Synapse.Operator.Application.Configuration.ApplicationOptions"/>
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Services.V1WorkflowController.Workflows">
            <summary>
            Gets the <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Workflow"/>s
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Services.V1WorkflowController.WorkflowInstances">
            <summary>
            Gets the <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>s
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Services.V1WorkflowController.Triggers">
            <summary>
            Gets the <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Trigger"/>s
            </summary>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.OnEvent(Neuroglia.K8s.IResourceEvent{Synapse.Domain.Models.V1Workflow})">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.ReconcileAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.ProcessAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Processes the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to process</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.InitializeAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Initializes the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to initialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1Workflow"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.ValidateAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Validates the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to validate</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1Workflow"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.DeployAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Deploys the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to deploy</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1Workflow"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.DeployTriggerAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Deploys a <see cref="T:Synapse.Domain.Models.V1Trigger"/> for the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to deploy the <see cref="T:Synapse.Domain.Models.V1Trigger"/> for</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1Workflow"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.DeployJobAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Deploys a new <see cref="T:k8s.Models.V1Job"/> for the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to deploy a new <see cref="T:k8s.Models.V1Job"/> for</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1Workflow"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.DeployCronJobAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Deploys a new <see cref="T:k8s.Models.V1CronJob"/> for the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to deploy a new <see cref="T:k8s.Models.V1CronJob"/> for</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1Workflow"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowController.CleanUpAsync(Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Cleans up artifacts related to the specified <see cref="T:Synapse.Domain.Models.V1Workflow"/>
            </summary>
            <param name="workflow">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> to clean up the artifacts of</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Synapse.Operator.Application.Services.V1WorkflowInstanceController">
            <summary>
            Represents the <see cref="T:Neuroglia.K8s.ResourceController`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>s
            </summary>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,k8s.IKubernetes,Neuroglia.K8s.IResourceWatcherFactory,Microsoft.Extensions.Options.IOptions{Neuroglia.K8s.ResourceControllerOptions{Synapse.Domain.Models.V1WorkflowInstance}},Microsoft.Extensions.Options.IOptions{Synapse.Operator.Application.Configuration.ApplicationOptions},Synapse.Services.IRepository{Synapse.Domain.Models.V1Workflow},Synapse.Services.IRepository{Synapse.Domain.Models.V1WorkflowInstance})">
            <summary>
            Initializes a new <see cref="T:Synapse.Operator.Application.Services.V1WorkflowInstanceController"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="kubernetes">The service used to interact with the <see cref="T:k8s.Kubernetes"/> API</param>
            <param name="resourceWatcherFactory">The service used to create <see cref="T:Neuroglia.K8s.IResourceWatcher"/>s</param>
            <param name="options">The <see cref="T:Synapse.Operator.Application.Services.V1WorkflowController"/>'s <see cref="T:Neuroglia.K8s.ResourceControllerOptions`1"/></param>
            <param name="applicationOptions">The current <see cref="T:Synapse.Operator.Application.Configuration.ApplicationOptions"/></param>
            <param name="workflows">The <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Workflow"/>s</param>
            <param name="workflowInstances">The <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>s</param>
        </member>
        <member name="P:Synapse.Operator.Application.Services.V1WorkflowInstanceController.ApplicationOptions">
            <summary>
            Gets the current <see cref="T:Synapse.Operator.Application.Configuration.ApplicationOptions"/>
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Services.V1WorkflowInstanceController.Workflows">
            <summary>
            Gets the <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Workflow"/>s
            </summary>
        </member>
        <member name="P:Synapse.Operator.Application.Services.V1WorkflowInstanceController.WorkflowInstances">
            <summary>
            Gets the <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>s
            </summary>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.OnEvent(Neuroglia.K8s.IResourceEvent{Synapse.Domain.Models.V1WorkflowInstance})">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.ReconcileAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.ProcessAsync(Synapse.Domain.Models.V1WorkflowInstance,System.Threading.CancellationToken)">
            <summary>
            Processes the specified <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>
            </summary>
            <param name="workflowInstance">The <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/> to process</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.InitializeAsync(Synapse.Domain.Models.V1WorkflowInstance,Synapse.Domain.Models.V1Workflow,System.Threading.CancellationToken)">
            <summary>
            Initializes the specified <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>
            </summary>
            <param name="workflowInstance">The <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/> to initialize</param>
            <param name="workflowDefinition">The <see cref="T:Synapse.Domain.Models.V1Workflow"/> of the <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/> to initialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.DeployAsync(Synapse.Domain.Models.V1WorkflowInstance,System.Threading.CancellationToken)">
            <summary>
            Deploys the specified <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>
            </summary>
            <param name="workflowInstance">The <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/> to deploy</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.BuildRunnerPodAsync(Synapse.Domain.Models.V1WorkflowInstance,System.Threading.CancellationToken)">
            <summary>
            Builds a new <see cref="T:k8s.Models.V1Pod"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>
            </summary>
            <param name="workflowInstance">The <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/> to build a new <see cref="T:k8s.Models.V1Pod"/> for</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:k8s.Models.V1Pod"/></returns>
        </member>
        <member name="M:Synapse.Operator.Application.Services.V1WorkflowInstanceController.CleanUpAsync(Synapse.Domain.Models.V1WorkflowInstance,System.Threading.CancellationToken)">
            <summary>
            Cleans up artifacts related to the specified <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>
            </summary>
            <param name="workflowInstance">The <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/> to clean up the artifacts of</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Synapse.Operator.Application.SynapseOperatorConstants">
            <summary>
            Exposes constants about the Synapse Operator
            </summary>
        </member>
        <member name="T:Synapse.Operator.Application.SynapseOperatorConstants.Logging">
            <summary>
            Exposes constants about Synapse Operator's logging
            </summary>
        </member>
        <member name="M:Synapse.Operator.Application.SynapseOperatorConstants.Logging.GetHeader">
            <summary>
            Gets the Synapse Operator log header
            </summary>
            <returns>The Synapse Operator log header</returns>
        </member>
    </members>
</doc>
