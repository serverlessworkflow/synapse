<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Synapse.Runner.Application</name>
    </assembly>
    <members>
        <member name="T:Synapse.Runner.Application.OperationTypeExtensions">
            <summary>
            Defines extensions for <see cref="T:System.Net.Http.HttpMethod"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.OperationTypeExtensions.ToHttpMethod(Microsoft.OpenApi.Models.OperationType)">
            <summary>
            Converts the <see cref="T:Microsoft.OpenApi.Models.OperationType"/> into a new <see cref="T:System.Net.Http.HttpMethod"/>
            </summary>
            <param name="operationType">The <see cref="T:Microsoft.OpenApi.Models.OperationType"/> to convert</param>
            <returns>The reuslting <see cref="T:System.Net.Http.HttpMethod"/></returns>
        </member>
        <member name="T:Synapse.Runner.Application.Services.IEndProcessor">
            <summary>
            Defines the fundamentals of a service used to process <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/> activities
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IEndProcessor.End">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/> to process
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.Services.IStateProcessor">
            <summary>
            Defines the fundamentals of a service used to process <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> activities
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IStateProcessor.State">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to process
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.Services.IStateProcessor`1">
            <summary>
            Defines the fundamentals of a service used to process <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> activities
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IStateProcessor`1.State">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to process
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.Services.ITransitionProcessor">
            <summary>
            Defines the fundamentals of a service used to process <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/> activities
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.ITransitionProcessor.Transition">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/> to process
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor">
            <summary>
            Defines the fundamentals of a service used to process <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> instances
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IWorkflowActivityProcessor.Activity">
            <summary>
            Gets the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowActivityProcessor.ProcessAsync(System.Threading.CancellationToken)">
            <summary>
            Processes the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowActivityProcessor.SuspendAsync(System.Threading.CancellationToken)">
            <summary>
            Suspends the processing of the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowActivityProcessor.TerminateAsync(System.Threading.CancellationToken)">
            <summary>
            Terminates the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s execution
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor`1">
            <summary>
            Defines the fundamentals of a service used to process <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> instances
            </summary>
            <typeparam name="TActivity">The type of the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</typeparam>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IWorkflowActivityProcessor`1.Activity">
            <summary>
            Gets the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory">
            <summary>
            Defines the fundamentals of a service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory.Create(Synapse.Domain.Models.V1WorkflowActivity)">
            <summary>
            Creates a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</param>
            <returns>A new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory.Create``1(``0)">
            <summary>
            Creates a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <typeparam name="TActivity">The type of the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</typeparam>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</param>
            <returns>A new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory.Create``1(Synapse.Domain.Models.V1WorkflowActivity)">
            <summary>
            Creates a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <typeparam name="TProcessor">The type of the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> to create</typeparam>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</param>
            <returns>A new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory.Create``2(``1)">
            <summary>
            Creates a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <typeparam name="TActivity">The type of the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</typeparam>
            <typeparam name="TProcessor">The type of the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> to create</typeparam>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</param>
            <returns>A new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/></returns>
        </member>
        <member name="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext">
            <summary>
            Defines the fundamentals of a service used to manage a <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>'s execution context
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.ExpressionEvaluator">
            <summary>
            Gets the service used to evaluate workflow expressions
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Definition">
            <summary>
            Gets the <see cref="T:Synapse.Domain.Models.V1Workflow"/> that is being executed
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance">
            <summary>
            Gets the <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/> that is being executed
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Initializes the <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.StartWorkflowAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s execution
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.ExecuteWorkflowAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.SuspendWorkflowAsync(System.Threading.CancellationToken)">
            <summary>
            Suspends the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s execution
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.FaultWorkflowAsync(System.Exception,System.Threading.CancellationToken)">
            <summary>
            Faults the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s execution
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.TerminateWorkflowAsync(System.Threading.CancellationToken)">
            <summary>
            Terminates the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s execution
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.TransitionToAsync(ServerlessWorkflow.Sdk.Models.StateDefinition,System.Threading.CancellationToken)">
            <summary>
            Starts the transition of the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s current <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to the specified one
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.SetWorkflowOutputAsync(Newtonsoft.Json.Linq.JToken,System.Threading.CancellationToken)">
            <summary>
            Sets the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s output
            </summary>
            <param name="output">The <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s output data</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.ListChildActivitiesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the <see cref="P:Synapse.Runner.Application.Services.IWorkflowExecutionContext.Instance"/>'s child <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> instances
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.ListChildActivitiesAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <summary>
            Lists the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s child <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> instances
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to list the children of</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.CreateActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The newly created <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.InitializeActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <summary>
            Initializes the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to initialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.ProcessActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <summary>
            Processes the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.SuspendActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <summary>
            Suspends the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to suspend</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.FaultActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Exception,System.Threading.CancellationToken)">
            <summary>
            Faults the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s execution
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to fault the execution of</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.TerminateActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s execution
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to terminate the execution of</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.SetActivityResultAsync(Synapse.Domain.Models.V1WorkflowActivity,Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <summary>
            Sets the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s execution result
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to set the execution result of</param>
            <param name="result">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.IWorkflowExecutionContext.UpdateActivityDataAsync(Synapse.Domain.Models.V1WorkflowActivity,Newtonsoft.Json.Linq.JToken,System.Threading.CancellationToken)">
            <summary>
            Updates the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s data
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to update the data of</param>
            <param name="data">The update data</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The updated <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/></returns>
        </member>
        <member name="T:Synapse.Runner.Application.Services.Processors.ActionProcessor">
            <summary>
            Represents a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> used to process <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.ActionProcessor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,Synapse.Domain.Models.V1WorkflowActivity,ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.Processors.ActionProcessor"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to process</param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.ActionProcessor.Action">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to process
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.ActionProcessor.OnResultAsync(Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Synapse.Runner.Application.Services.Processors.EndProcessor">
            <summary>
            Represents a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> used to process <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.EndProcessor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,ServerlessWorkflow.Sdk.Models.EndDefinition,Synapse.Domain.Models.V1WorkflowActivity)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.Processors.EndProcessor"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="end">The <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/> to process</param>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.EndProcessor.End">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/> to process
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.EndProcessor.InitializeAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.EndProcessor.ProcessAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Synapse.Runner.Application.Services.Processors.FunctionProcessor">
            <summary>
            Represents an <see cref="!:ExecutionPointerProcessor"/> used to process <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.FunctionProcessor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,System.Net.Http.IHttpClientFactory,Synapse.Domain.Models.V1WorkflowActivity,ServerlessWorkflow.Sdk.Models.ActionDefinition,ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.Processors.FunctionProcessor"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to process</param>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to process</param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.Function">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to process
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.FunctionReference">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/> to process
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.HttpClient">
            <summary>
            Gets the <see cref="T:System.Net.Http.HttpClient"/> used by the <see cref="T:Synapse.Runner.Application.Services.Processors.FunctionProcessor"/> to execute the function
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.OpenApiDocument">
            <summary>
            Gets/sets the <see cref="T:Microsoft.OpenApi.Models.OpenApiDocument"/> that declares the operation to invoke
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.OpenApiOperation">
            <summary>
            Gets/sets the <see cref="T:Microsoft.OpenApi.Models.OpenApiOperation"/> that describes the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to invoke
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.Servers">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the addresses of the available remote servers
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.OperationId">
            <summary>
            Gets/sets the OpenApi id of the operation to invoke
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.HttpMethod">
            <summary>
            Gets/sets the <see cref="T:System.Net.Http.HttpMethod"/> to use when executing the operation
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.Parameters">
            <summary>
            Gets/sets a <see cref="T:Newtonsoft.Json.Linq.JObject"/> that represents the parameters to pass to the function to execute
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.Path">
            <summary>
            Gets/sets the uri's path segment of the function to execute
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.QueryString">
            <summary>
            Gets/sets the uri's query string segment of the function to execute
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.Body">
            <summary>
            Gets/sets the body of the <see cref="T:System.Net.Http.HttpRequestMessage"/> sent to invoke the function
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.Headers">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the headers of the <see cref="T:System.Net.Http.HttpRequestMessage"/> sent to invoke the function
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.FunctionProcessor.Cookies">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the cookies of the <see cref="T:System.Net.Http.HttpRequestMessage"/> sent to invoke the function
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.FunctionProcessor.InitializeAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.FunctionProcessor.BuildParameters">
            <summary>
            Builds the parameters to pass to the function to execute
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.FunctionProcessor.TryGetParameter(System.String,System.String@)">
            <summary>
            Attempts to get the value of the parameter at the specified path
            </summary>
            <param name="expression">The path to the parameter to get the value of</param>
            <param name="value">The value of the parameter</param>
            <returns>A boolean indicating whether or not the parameter could be fetched</returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.FunctionProcessor.ProcessAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Synapse.Runner.Application.Services.Processors.InjectStateProcessor">
            <summary>
            Represents the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> used to process <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.InjectStateProcessor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,Synapse.Domain.Models.V1WorkflowActivity,ServerlessWorkflow.Sdk.Models.InjectStateDefinition)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.Processors.InjectStateProcessor"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/> to process</param>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.InjectStateProcessor.InitializeAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.InjectStateProcessor.ProcessAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Synapse.Runner.Application.Services.Processors.OperationStateProcessor">
            <summary>
            Represents a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> used to process <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.OperationStateProcessor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,Synapse.Domain.Models.V1WorkflowActivity,ServerlessWorkflow.Sdk.Models.OperationStateDefinition)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.Processors.OperationStateProcessor"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/> to process</param>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.OperationStateProcessor.CreateProcessorFor(Synapse.Domain.Models.V1WorkflowActivity)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.OperationStateProcessor.InitializeAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.OperationStateProcessor.ProcessAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.OperationStateProcessor.OnActionExecutedAsync(Synapse.Runner.Application.Services.Processors.ActionProcessor,Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <summary>
            Handles an <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.Processors.ActionProcessor"/> that has returned the <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/></param>
            <param name="result">The returned <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.OperationStateProcessor.OnActionErrorAsync(Synapse.Runner.Application.Services.Processors.ActionProcessor,System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handles an <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s <see cref="T:System.Exception"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.Processors.ActionProcessor"/> that has thrown the specified <see cref="T:System.Exception"/></param>
            <param name="ex">The thrown <see cref="T:System.Exception"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.OperationStateProcessor.OnActionCompletedAsync(Synapse.Runner.Application.Services.Processors.ActionProcessor,System.Threading.CancellationToken)">
            <summary>
            Handles the completion of the specified <see cref="!:ExecutionPointer"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.Processors.ActionProcessor"/> that has returned the <see cref="!:ExecutionResult"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Synapse.Runner.Application.Services.Processors.StateProcessor`1">
            <summary>
            Represents the base class for all <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s that process <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s
            </summary>
            <typeparam name="TState">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to process</typeparam>
        </member>
        <member name="M:Synapse.Runner.Application.Services.Processors.StateProcessor`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,Synapse.Domain.Models.V1WorkflowActivity,`0)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.Processors.StateProcessor`1"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to process</param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.Processors.StateProcessor`1.State">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to process
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.Services.WorkflowActivityProcessor">
            <summary>
            Represents the default implementation of the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor`1"/> interface
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,Synapse.Domain.Models.V1WorkflowActivity)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.WorkflowActivityProcessor"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to process</param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessor.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessor.ExecutionContext">
            <summary>
            Gets the current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/>
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessor.ActivityProcessorFactory">
            <summary>
            Gets the service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessor.Activity">
            <inheritdoc/>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessor.Subject">
            <summary>
            Gets the <see cref="T:System.Reactive.Subjects.Subject`1"/> used to observe the <see cref="T:Synapse.Runner.Application.Services.WorkflowActivityProcessor"/>'s execution
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessor.Processors">
            <summary>
            Gets a <see cref="T:ConcurrentCollections.ConcurrentHashSet`1"/> containing all child <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessor.CancellationTokenSource">
            <summary>
            Gets the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>'s <see cref="T:System.Threading.CancellationTokenSource"/>
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Initializes the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.ProcessAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.SuspendAsync(System.Threading.CancellationToken)">
            <summary>
            Suspends the <see cref="!:ExecutionPointer"/>'s processing
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.TerminateAsync(System.Threading.CancellationToken)">
            <summary>
            Terminates the <see cref="!:ExecutionPointerProcessor"/>'s execution
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.CreateProcessorFor(Synapse.Domain.Models.V1WorkflowActivity)">
            <summary>
            Creates a new child <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a child <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</param>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.OnResultAsync(Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <summary>
            Handles the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/>
            </summary>
            <param name="result">The <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/> to handle</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.OnErrorAsync(System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handles the specified <see cref="T:System.Exception"/> that occured during the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s processing
            </summary>
            <param name="ex">The <see cref="T:System.Exception"/> to handle</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.OnCompletedAsync(System.Threading.CancellationToken)">
            <summary>
            Handles the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>'s completion
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.Dispose(System.Boolean)">
            <summary>
            Disposes of the <see cref="!:WorkflowActivityProcessor&lt;TActivity&gt;"/>
            </summary>
            <param name="disposing">A boolean indicating whether or not the <see cref="!:WorkflowActivityProcessor&lt;TActivity&gt;"/> is being disposed of</param>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessor.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Synapse.Runner.Application.Services.WorkflowActivityProcessorFactory">
            <summary>
            Represents the default implementation of the <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory"/>
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessorFactory.#ctor(System.IServiceProvider,Synapse.Runner.Application.Services.IWorkflowExecutionContext)">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.WorkflowActivityProcessorFactory"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessorFactory.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowActivityProcessorFactory.ExecutionContext">
            <summary>
            Gets the current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/>
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowActivityProcessorFactory.Create(Synapse.Domain.Models.V1WorkflowActivity)">
            <summary>
            Creates a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</param>
            <returns>A new <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/></returns>
        </member>
        <member name="T:Synapse.Runner.Application.Services.WorkflowExecutionContext">
            <summary>
            Represents the default implementation of the <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/> interface
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.#ctor(Microsoft.Extensions.Logging.ILogger{Synapse.Runner.Application.Services.WorkflowExecutionContext},Microsoft.Extensions.Hosting.IHostApplicationLifetime,Synapse.Services.IExpressionEvaluatorFactory,Synapse.Services.IRepository{Synapse.Domain.Models.V1Workflow},Synapse.Services.IRepository{Synapse.Domain.Models.V1WorkflowInstance})">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.WorkflowExecutionContext"/>
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="applicationLifetime">The service used to manage the application's lifetime</param>
            <param name="expressionEvaluatorFactory">The service used to create <see cref="T:Synapse.Services.IExpressionEvaluator"/>s</param>
            <param name="definitions">The <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Workflow"/>s</param>
            <param name="definitions">The <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>s</param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.ApplicationLifetime">
            <summary>
            Gets the service used to manage the application's lifetime
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.ExpressionEvaluatorFactory">
            <summary>
            Gets the service used to create <see cref="T:Synapse.Services.IExpressionEvaluator"/>s
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.Definitions">
            <summary>
            Gets the <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1Workflow"/>s
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.Instances">
            <summary>
            Gets the <see cref="T:Synapse.Services.IRepository`1"/> used to manage <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>s
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.Definition">
            <inheritdoc/>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.Instance">
            <inheritdoc/>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowExecutionContext.ExpressionEvaluator">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.InitializeAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.StartWorkflowAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.ExecuteWorkflowAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.SuspendWorkflowAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.FaultWorkflowAsync(System.Exception,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.TerminateWorkflowAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.TransitionToAsync(ServerlessWorkflow.Sdk.Models.StateDefinition,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.SetWorkflowOutputAsync(Newtonsoft.Json.Linq.JToken,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.ListChildActivitiesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.ListChildActivitiesAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.CreateActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.InitializeActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.ProcessActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.SuspendActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.FaultActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Exception,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.TerminateActivityAsync(Synapse.Domain.Models.V1WorkflowActivity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.SetActivityResultAsync(Synapse.Domain.Models.V1WorkflowActivity,Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowExecutionContext.UpdateActivityDataAsync(Synapse.Domain.Models.V1WorkflowActivity,Newtonsoft.Json.Linq.JToken,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Synapse.Runner.Application.Services.WorkflowRunner">
            <summary>
            Represents the default implementation of the <see cref="T:Synapse.Runner.Application.Services.IWorkflowRunner"/> interface
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.#ctor(Microsoft.Extensions.Logging.ILogger{Synapse.Runner.Application.Services.WorkflowRunner},Microsoft.Extensions.Hosting.IHostApplicationLifetime,Synapse.Runner.Application.Services.IWorkflowExecutionContext,Synapse.Runner.Application.Services.IWorkflowActivityProcessorFactory,Microsoft.Extensions.Options.IOptions{Synapse.Runner.Application.Configuration.ApplicationOptions})">
            <summary>
            Initializes a new <see cref="T:Synapse.Runner.Application.Services.WorkflowRunner"/>
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="applicationLifetime">The service used to manage the application's lifetime</param>
            <param name="executionContext">The current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/></param>
            <param name="activityProcessorFactory">The service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s</param>
            <param name="applicationOptions">The service used to access the current <see cref="T:Synapse.Runner.Application.Configuration.ApplicationOptions"/></param>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowRunner.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowRunner.ApplicationLifetime">
            <summary>
            Gets the service used to manage the application's lifetime
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowRunner.ApplicationOptions">
            <summary>
            Gets the current <see cref="T:Synapse.Runner.Application.Configuration.ApplicationOptions"/>
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowRunner.ExecutionContext">
            <summary>
            Gets the current <see cref="T:Synapse.Runner.Application.Services.IWorkflowExecutionContext"/>
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowRunner.ActivityProcessorFactory">
            <summary>
            Gets the service used to create <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowRunner.CancellationTokenSource">
            <summary>
            Gets the <see cref="T:Synapse.Runner.Application.Services.WorkflowRunner"/>'s <see cref="P:Synapse.Runner.Application.Services.WorkflowRunner.CancellationTokenSource"/>
            </summary>
        </member>
        <member name="P:Synapse.Runner.Application.Services.WorkflowRunner.Processors">
            <summary>
            Gets a <see cref="T:ConcurrentCollections.ConcurrentHashSet`1"/> containing all child <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>s
            </summary>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.RunWorkflowAsync(System.Threading.CancellationToken)">
            <summary>
            Runs the <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.CreateProcessorFor(Synapse.Domain.Models.V1WorkflowActivity)">
            <summary>
            Creates a new child <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for the specified <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/>
            </summary>
            <param name="activity">The <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> to create a child <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> for</param>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnStateResultAsync(Synapse.Runner.Application.Services.IStateProcessor,Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <summary>
            Handles the next <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/> returned by a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that has returned an <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/></param>
            <param name="result">The <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/> to process</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnStateErrorAsync(Synapse.Runner.Application.Services.IStateProcessor,System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handles the <see cref="T:System.Exception"/> thrown by a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that has thrown the <see cref="T:System.Exception"/></param>
            <param name="ex">The thrown <see cref="T:System.Exception"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnStateCompletedAsync(Synapse.Runner.Application.Services.IStateProcessor,System.Threading.CancellationToken)">
            <summary>
            Handles the completion of a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> execution
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that ran to completion</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnTransitionResultAsync(Synapse.Runner.Application.Services.ITransitionProcessor,Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <summary>
            Handles the next <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/> returned by a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that has returned an <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/></param>
            <param name="result">The <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/> to process</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnTransitionErrorAsync(Synapse.Runner.Application.Services.IWorkflowActivityProcessor,System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handles the <see cref="T:System.Exception"/> thrown by a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that has thrown the <see cref="T:System.Exception"/></param>
            <param name="ex">The thrown <see cref="T:System.Exception"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnTransitionCompletedAsync(Synapse.Runner.Application.Services.ITransitionProcessor,System.Threading.CancellationToken)">
            <summary>
            Handles the completion of a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> execution
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that ran to completion</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnEndErrorAsync(Synapse.Runner.Application.Services.IWorkflowActivityProcessor,System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handles the <see cref="T:System.Exception"/> thrown by a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/>
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that has thrown the <see cref="T:System.Exception"/></param>
            <param name="ex">The thrown <see cref="T:System.Exception"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnEndCompletedAsync(Synapse.Runner.Application.Services.IWorkflowActivityProcessor,System.Threading.CancellationToken)">
            <summary>
            Handles the completion of a <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> execution
            </summary>
            <param name="processor">The <see cref="T:Synapse.Runner.Application.Services.IWorkflowActivityProcessor"/> that ran to completion</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnResultAsync(Synapse.Domain.Models.V1WorkflowExecutionResult,System.Threading.CancellationToken)">
            <summary>
            Handles the next <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>'s <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/>
            </summary>
            <param name="executionResult">The <see cref="T:Synapse.Domain.Models.V1WorkflowInstance"/>'s <see cref="T:Synapse.Domain.Models.V1WorkflowExecutionResult"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnErrorAsync(System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handles an <see cref="T:System.Exception"/> thrown during the  <see cref="T:Synapse.Runner.Application.Services.WorkflowRunner"/>'s execution
            </summary>
            <param name="ex">The thrown <see cref="T:System.Exception"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.OnCompletedAsync(System.Threading.CancellationToken)">
            <summary>
            Handles the <see cref="T:Synapse.Runner.Application.Services.WorkflowRunner"/>'s completion
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Synapse.Runner.Application.Services.WorkflowRunner.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Synapse.Runner.Application.SynapseRunnerConstants">
            <summary>
            Exposes constants about the Synapse Runner
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.SynapseRunnerConstants.Logging">
            <summary>
            Exposes constants about Synapse Runner's logging
            </summary>
        </member>
        <member name="T:Synapse.Runner.Application.V1WorkflowActivityMetadata">
            <summary>
            Exposeses constants about <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> metadata
            </summary>
        </member>
        <member name="F:Synapse.Runner.Application.V1WorkflowActivityMetadata.Action">
            <summary>
            Gets the key of the metadata used to store the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> processes
            </summary>
        </member>
        <member name="F:Synapse.Runner.Application.V1WorkflowActivityMetadata.Branch">
            <summary>
            Gets the key of the metadata used to store the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> processes
            </summary>
        </member>
        <member name="F:Synapse.Runner.Application.V1WorkflowActivityMetadata.State">
            <summary>
            Gets the key of the metadata used to store the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> the <see cref="T:Synapse.Domain.Models.V1WorkflowActivity"/> processes
            </summary>
        </member>
    </members>
</doc>
