<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServerlessWorkflow.Sdk</name>
    </assembly>
    <members>
        <member name="T:ServerlessWorkflow.Sdk.Models.ActionExecutionMode">
            <summary>
            Enumerates all types of actions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.Models.ActionExecutionMode.Sequential">
            <summary>
            Indicates a sequential execution of actions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.Models.ActionExecutionMode.Parallel">
            <summary>
            Indicates a parallel execution of actions
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition">
            <summary>
            Represents the object used to configure how actions filter the state data for both input and output
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition.FromStateData">
            <summary>
            Gets/sets an expression that filters state data that can be used by the action
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition.Results">
            <summary>
            Gets/sets an expression that filters the actions data results
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition.ToStateData">
            <summary>
            Gets/sets an expression that selects a state data element to which the action results should be added/merged into. If not specified denotes the top-level state data element
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ActionDefinition">
            <summary>
            Represents the object used to define a workflow action
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Type">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Name">
            <summary>
            Gets/sets the unique action definition name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.FunctionToken">
            <summary>
            Gets/sets a <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the function to invoke
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Function">
            <summary>
            Gets the object used to configure the reference of the function to invoke
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.FunctionReference">
            <summary>
            Gets the reference of the function to invoke
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.EventToken">
            <summary>
            Gets/sets a <see cref="T:Newtonsoft.Json.Linq.JToken"/> that references a 'trigger' and 'result' reusable event definitions
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Event">
            <summary>
            Gets the object used to configure the reference of the event to produce or consume
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Timeout">
            <summary>
            Gets/sets the time period to wait for function execution to complete
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.DataFilter">
            <summary>
            Gets/sets an object used to define the way to filter the action's data
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ActionDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.BranchDefinition">
            <summary>
            Represents a workflow execution branch
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BranchDefinition.Name">
            <summary>
            gets/sets the branch's name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BranchDefinition.WorkflowId">
            <summary>
            Gets/sets the unique id of a workflow to be executed in this branch
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BranchDefinition.ActionMode">
            <summary>
            Gets/sets a value that specifies how actions are to be performed (in sequence of parallel)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BranchDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the actions to be executed in this branch
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.BranchDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition">
            <summary>
            Represents a workflow state that performs an action, then waits for the callback event that denotes completion of the action
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.Action">
            <summary>
            Gets/sets the action to be executed
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.Event">
            <summary>
            Gets/sets a reference to the callback event to await
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.Timeout">
            <summary>
            Gets/sets the time period to wait for incoming events
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.EventDataFilter">
            <summary>
            Gets/sets the callback event data filter definition
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.CronDefinition">
            <summary>
            Represents a CRON expression definition
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CronDefinition.Expression">
            <summary>
            Gets/sets the repeating interval (cron expression) describing when the workflow instance should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CronDefinition.ValidUntil">
            <summary>
            Gets/sets the date and time when the cron expression invocation is no longer valid
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition">
            <summary>
            Represents a data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataCaseDefinition.Condition">
            <summary>
            Gets/sets an expression evaluated against state data. True if results are not empty
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition">
            <summary>
            Represents the object used to configure a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s data input schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition.Schema">
            <summary>
            Gets/sets the url of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s input data schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition.FailOnValidationError">
            <summary>
            Gets/sets a boolean indicating whether or not to terminate the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution whenever the validation of the input data fails. Defaults to true.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.DefaultDefinition">
            <summary>
            Represents an object used to define the transition of the workflow if there is no matching data conditions or event timeout is reached
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DefaultDefinition.TransitionToken">
            <summary>
            Gets/sets a <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the next transition of the workflow if there is valid matches
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DefaultDefinition.Transition">
            <summary>
            Gets/sets an object used to define the next transition of the workflow if there is valid matches
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DefaultDefinition.EndToken">
            <summary>
            Gets/sets a <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the object used to configure the end of the workflow
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DefaultDefinition.End">
            <summary>
            Gets/sets an object used to configure the end of the workflow
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.DelayStateDefinition">
            <summary>
            Represents a workflow state that waits for a certain amount of time before transitioning to a next state
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.DelayStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.DelayStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DelayStateDefinition.Delay">
            <summary>
            Gets/sets the amount of time to delay when in this state
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EndDefinition">
            <summary>
            Represents an object used to explicitly define execution completion of a workflow instance or workflow execution path.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EndDefinition.Terminate">
            <summary>
            Gets/sets a boolean indicating whether or not to terminate the executing workflow. If true, completes all execution flows in the given workflow instance. Defaults to false.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EndDefinition.ProduceEvents">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the events that should be produced
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EndDefinition.Compensate">
            <summary>
            Gets/sets a boolean indicating whether or not the state should trigger compensation. Default is false.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition">
            <summary>
            Represents the definition of a workflow error handler
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Error">
            <summary>
            Gets/sets a domain-specific error name, or '*' to indicate all possible errors. If other handlers are declared, the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> will only be considered on errors that have NOT been handled by any other.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Code">
            <summary>
            Gets/sets the error code. Can be used in addition to the name to help runtimes resolve to technical errors/exceptions. Should not be defined if error is set to '*'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Retry">
            <summary>
            Gets/sets a reference to the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to use 
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.TransitionToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Transition">
            <summary>
            Gets/sets the object used to configre the transition to execute on error.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.EndToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.End">
            <summary>
            Gets/sets the object used to configre the way the workflow ends on error
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition">
            <summary>
            Represents the definition of an event-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventCaseDefinition.Event">
            <summary>
            Gets/sets the unique event name the condition applies to
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition">
            <summary>
            Represents an object used to define the way to correlate a cloud event
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition.ContextAttributeName">
            <summary>
            Gets/sets the cloud event Extension Context Attribute name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition.ContextAttributeValue">
            <summary>
            Gets/sets the cloud event Extension Context Attribute value
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventDataFilterDefinition">
            <summary>
            Represents an object used to configure how event data is to be filtered and added to or merged with the state data
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDataFilterDefinition.Data">
            <summary>
            Gets/sets an expression that filters the event data (payload)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDataFilterDefinition.ToStateData">
            <summary>
            Gets/sets an expression that selects a state data element to which the action results should be added/merged into. If not specified denotes the top-level state data element
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventDefinition">
            <summary>
            Represents an object used to define events and their correlations
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Name">
            <summary>
            Gets/sets the Unique event name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Source">
            <summary>
            Gets/sets the cloud event source
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Type">
            <summary>
            Gets/sets the cloud event type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Kind">
            <summary>
            Gets/sets a value that defines the CloudEvent as either '<see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>' or '<see cref="F:ServerlessWorkflow.Sdk.EventKind.Produced"/>' by the workflow. Default is '<see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Correlations">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition"/>s used to define the way the cloud event is correlated
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Metadata">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>'s metadata
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventReference">
            <summary>
            Represents a reference to an <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.TriggerEvent">
            <summary>
            Gets the name of the 'produced' event that triggers the action
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.ResultEvent">
            <summary>
            Gets the name of the 'consumed' event that triggers the action
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.Data">
            <summary>
            Gets/sets the data to become the cloud event's payload. 
            If string type, an expression which selects parts of the states data output to become the data (payload) of the event referenced by 'triggerEventRef'. 
            If object type, a custom object to become the data (payload) of the event referenced by 'triggerEventRef'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.ContextAttributes">
            <summary>
            Gets/sets additional extension context attributes to the produced event
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition">
            <summary>
            Represents a workflow state that awaits one or more events and perform actions when they are received
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateDefinition.Exclusive">
            <summary>
            Gets/sets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> awaits one or all of defined events.
            If 'true', consuming one of the defined events causes its associated actions to be performed. If 'false', all of the defined events must be consumed in order for actions to be performed. Defaults to 'true'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateDefinition.Triggers">
            <summary>
            Gets/sets an object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>'s triggers and actions
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateDefinition.Timeout">
            <summary>
            Gets/sets the duration to wait for incoming events
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition">
            <summary>
            Represents the definition of an <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>'s trigger
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.Events">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the references one or more unique event names in the defined workflow events
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.ActionMode">
            <summary>
            Gets/sets a value that specifies how actions are to be performed (in sequence of parallel)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the actions to be performed if expression matches
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.DataFilter">
            <summary>
            Gets/sets an object used to filter the event data 
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition">
            <summary>
            Represents an object used to define the execution timeout for a workflow instance
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition.Duration">
            <summary>
            Gets/sets the duration after which the workflow's execution will time out
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition.Interrupt">
            <summary>
            Gets/sets a boolean indicating whether or not to terminate the workflow execution.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition.RunBefore">
            <summary>
            Gets/sets the name of a workflow state to be executed before workflow instance is terminated
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition">
            <summary>
            Represents a workflow state that executes a set of defined actions or workflows for each element of a data array
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.InputCollection">
            <summary>
            gets/sets an expression selecting an array element of the states data
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.OutputCollection">
            <summary>
            Gets/sets an expression specifying an array element of the states data to add the results of each iteration
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.IterationParameter">
            <summary>
            Gets/sets the name of the iteration parameter that can be referenced in actions/workflow. For each parallel iteration, this param should contain an unique element of the array referenced by the  <see cref="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.InputCollection"/> expression
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.Max">
            <summary>
            Gets/sets a uint that specifies how upper bound on how many iterations may run in parallel
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.ActionMode">
            <summary>
            Gets/sets a value used to configure the way the actions of each iterations should be executed
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of actions to be executed for each of the elements of the <see cref="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.InputCollection"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.WorkflowId">
            <summary>
            Gets/sets the unique Id of a workflow to be executed for each of the elements of <see cref="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.InputCollection"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition">
            <summary>
            Represents an object used to define a reusable function
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Name">
            <summary>
            Gets/sets a unique function name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Operation">
            <summary>
            Gets/sets the operation. If type '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.Rest"/>', combination of the function/service OpenAPI definition URI and the operationID of the operation that needs to be invoked, separated by a '#'. 
            If type is `<see cref="F:ServerlessWorkflow.Sdk.FunctionType.Expression"/>` defines the workflow expression.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Type">
            <summary>
            Gets/sets the type of the defined function. Defaults to '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.Rest"/>'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Metadata">
            <summary>
            Gets/sets the function's metadata
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.FunctionDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.FunctionReference">
            <summary>
            Represents a reference to a <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionReference.Name">
            <summary>
            Gets/sets the referenced function's name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionReference.Arguments">
            <summary>
            Gets/sets a <see cref="T:Newtonsoft.Json.Linq.JObject"/> that contains the parameters of the function to invoke
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.FunctionReference.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition">
            <summary>
            Represents a workflow state that injects static data into state data input
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.InjectStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.InjectStateDefinition.Data">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> which can be set as state's data input and can be manipulated via filter
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition">
            <summary>
            Represents a workflow state that defines a set of actions to be performed in sequence or in parallel. Once all actions have been performed, a transition to another state can occur.
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.ActionMode">
            <summary>
            Gets/sets a value that specifies how actions are to be performed (in sequence of parallel). Defaults to sequential
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of actions to be performed if expression matches
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition">
            <summary>
            Represents a workflow state that executes <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>es in parallel
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.Branches">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>es executed by the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.CompletionType">
            <summary>
            Gets/sets a value that configures the way the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/> completes. Defaults to 'And'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.N">
            <summary>
            Gets/sets a value that represents the amount of <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>es to complete for completing the state, when <see cref="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.CompletionType"/> is set to <see cref="F:ServerlessWorkflow.Sdk.ParallelCompletionType.N"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ProduceEventDefinition">
            <summary>
            Represents the object used to configure an event o produce
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ProduceEventDefinition.EventReference">
            <summary>
            Gets/sets the name of a defined event to produce
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ProduceEventDefinition.Data">
            <summary>
            Gets/sets the data to pass to the cloud event to produce. If String, expression which selects parts of the states data output to become the data of the produced event. If object a custom object to become the data of produced event.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition">
            <summary>
            Represents an object that defines workflow states retry policy strategy. This is an explicit definition and can be reused across multiple defined workflow state errors.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/>'s name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.Delay">
            <summary>
            Gets/sets delay between retry attempts
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.Max">
            <summary>
            Gets/sets the maximum amount of retries allowed
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.MaxDelay">
            <summary>
            Gets/sets the maximum delay between retries
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.Increment">
            <summary>
            Gets/sets the duration which will be added to the delay between successive retries
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.Multiplier">
            <summary>
            Gets/sets a value by which the delay is multiplied before each attempt. For example: "1.2" meaning that each successive delay is 20% longer than the previous delay. 
            For example, if delay is 'PT10S', then the delay between the first and second attempts will be 10 seconds, and the delay before the third attempt will be 12 seconds.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.JitterToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/>'s jitter.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.JitterMultiplier">
            <summary>
            Gets/sets the maximum amount of random time added or subtracted from the delay between each retry relative to total delay
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.JitterDuration">
            <summary>
            Gets/sets the absolute maximum amount of random time added or subtracted from the delay between each retry
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition">
            <summary>
            Represents an object used to define the time/repeating intervals at which workflow instances can/should be started 
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.Interval">
            <summary>
            Gets/sets the time interval (ISO 8601 format) describing when workflow instances can be created.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.Cron">
            <summary>
            Gets/sets a CRON expression that defines when the workflow instance should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.DirectInvoke">
            <summary>
            Gets/sets a boolean indicating whether or not workflow instances can be created outside of the defined interval/cron. Defaults to false.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.Timezone">
            <summary>
            Gets/sets the timezone name used to evaluate the cron expression. Not used for interval as timezone can be specified there directly. If not specified, should default to local machine timezone.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StartDefinition">
            <summary>
            Represents an object used to explicitly define how/when workflow instances should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StartDefinition.StateName">
            <summary>
            Gets/sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StartDefinition.Schedule">
            <summary>
            Gets/sets the object used to define the time/repeating intervals at which workflow instances can/should be started
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StateDataFilter">
            <summary>
            Represents the object used to configure how to filter the states data input and output
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDataFilter.Input">
            <summary>
            Gets/sets an expression to filter the states data input
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDataFilter.Output">
            <summary>
            Gets/sets an expression that filters the states data output
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StateDataFilterDefinition">
            <summary>
            Represents the object used to configure how to filter the states data input and output
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDataFilterDefinition.Input">
            <summary>
            Gets/sets an expression to filter the states data input
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDataFilterDefinition.Output">
            <summary>
            Gets/sets an expression that filters the states data output
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StateDefinition">
            <summary>
            Represents a <see href="https://github.com/serverlessworkflow/specification/blob/master/specification.md#State-Definition">serverless workflow state definition</see>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.StateDefinition.#ctor(ServerlessWorkflow.Sdk.StateType)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="type">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s type</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Type">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Id">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s id
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s id
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.EndToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.End">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.DataFilter">
            <summary>
            Gets/sets the filter to apply to the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s input and output data
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Errors">
            <summary>
            Gets/sets the configuration of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s error handling
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.TransitionToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Transition">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.DataInputSchemaToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.DataInputSchema">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.CompensatedBy">
            <summary>
            Gets/sets the id of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> used to compensate the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.UseForCompensation">
            <summary>
            Gets/sets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> is used for compensating another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Metadata">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s metadata
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.StateDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition">
            <summary>
            Represents the base class for all <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s outcomes
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SubFlowLoopDefinition">
            <summary>
            Represents the definition of a <see cref="T:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition"/>'s loop
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowLoopDefinition.Expression">
            <summary>
            Gets/sets the expression evaluated against <see cref="T:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition"/> state data. <see cref="T:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition"/> will repeat execution as long as this expression is true or until the max property count is reached
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowLoopDefinition.CheckBefore">
            <summary>
            Gets/sets a boolean indicating whether or not to perform a check before looping. If true, the expression is evaluated before each repeat execution, if false the expression is evaluated after each repeat execution. Defaults to True.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowLoopDefinition.Max">
            <summary>
            Gets/sets the maximum amount of repeat executions
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowLoopDefinition.ContinueOnError">
            <summary>
            Gets/sets a boolean indicating whether or not to continue on error. If true, repeats executions in a case unhandled errors propagate from the sub-workflow to this state. Defaults to false.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowLoopDefinition.StopOnEvents">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing the names of all the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s to stop looping upon consumption of
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition">
            <summary>
            Represents a workflow state used to execute a workflow
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition.WaitForCompletion">
            <summary>
            Gets/sets a boolean indicating whether or not to wait for the instantiated workflow to complete before transitioning to next state
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition.WorkflowId">
            <summary>
            Gets/sets the unique identifier of the workflow to execute
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubFlowStateDefinition.Loop">
            <summary>
            Gets/sets an object used to define repetition (looping)
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition">
            <summary>
            Represents the base class for all <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/> case implementations
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.Type">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.TransitionToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.Transition">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/> that should be performed when the condition is met
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.EndToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.End">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/> that should be performed when the condition is met
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition">
            <summary>
            Represents a workflow state that can be seen as a workflow gateway: they can direct transitions of a workflow based on certain conditions
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.SwitchType">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.DataConditions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/>s between which to switch. Assigning the property sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.SwitchType"/> to <see cref="F:ServerlessWorkflow.Sdk.SwitchStateType.Data"/>.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.EventConditions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/>s between which to switch. Assigning the property sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.SwitchType"/> to <see cref="F:ServerlessWorkflow.Sdk.SwitchStateType.Event"/>.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.EventTimeout">
            <summary>
            Gets/sets the duration to wait for incoming events
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.Default">
            <summary>
            Gets/sets an object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s default condition, in case none of the specified conditions were met
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition">
            <summary>
            Represents an object used to define a state transition
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.TransitionDefinition.To">
            <summary>
            Gets/sets the name of state to transition to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.TransitionDefinition.ProduceEvents">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the events to be produced before the transition happens
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.TransitionDefinition.Compensate">
            <summary>
            Gets/sets a boolean indicating whether or not to trigger workflow compensation before the transition is taken. Default is false
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition">
            <summary>
            Represents the definition of a Serverless Workflow
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Id">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s unique identifier
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Description">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s description
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Version">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s version
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.SchemaVersion">
            <summary>
            Gets/sets the <see cref="T:System.Version"/> of the Serverless Workflow schema to use
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ExpressionLanguage">
            <summary>
            Gets/sets the language the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s expressions are expressed in
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Annotations">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s annotations
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ExecutionTimeout">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution timeout
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.StartToken">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that defines the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Start">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StartDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.KeepActive">
            <summary>
            Gets/sets a boolean indicating whether or not to keep instances of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> active event if there are no active execution paths. Instance can be terminated via 'terminate end definition' or reaching defined 'execTimeout'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Metadata">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s metadata
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Events">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Functions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Retries">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.States">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Create(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> used to build a new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="id">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <param name="version">The version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.ActionType">
            <summary>
            Enumerates all types of actions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ActionType.FunctionCall">
            <summary>
            Indicates an action that invokes a function
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ActionType.EventTrigger">
            <summary>
            Indicates an action that executes a cloud event trigger
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.ConditionType">
            <summary>
            Enumerates all types of conditions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ConditionType.Transition">
            <summary>
            Indicates a transition condition
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ConditionType.End">
            <summary>
            Indicates an end condition
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.EventKind">
            <summary>
            Enumerates all kinds of workflow events
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.EventKind.Consumed">
            <summary>
            Indicates an event to consume
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.EventKind.Produced">
            <summary>
            Indicates an event to produce
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.DurationExtensions">
            <summary>
            Defines extensions for <see cref="T:Iso8601DurationHelper.Duration"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.DurationExtensions.ToTimeSpan(Iso8601DurationHelper.Duration)">
            <summary>
            Converts the <see cref="T:Iso8601DurationHelper.Duration"/> into a <see cref="T:System.TimeSpan"/>
            </summary>
            <param name="duration">The <see cref="T:Iso8601DurationHelper.Duration"/> to convert</param>
            <returns>The converted <see cref="T:System.TimeSpan"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.IServiceCollectionExtensions">
            <summary>
            Defines extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IServiceCollectionExtensions.AddNewtonsoftJsonSerializer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Newtonsoft.Json.JsonSerializerSettings})">
            <summary>
            Adds and configures a <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer"/> service
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configurationAction">The <see cref="T:System.Action`1"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used by the <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IServiceCollectionExtensions.AddNewtonsoftJsonSerializer(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds and configures a <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer"/> service
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IServiceCollectionExtensions.AddYamlDotNet(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{YamlDotNet.Serialization.SerializerBuilder},System.Action{YamlDotNet.Serialization.DeserializerBuilder})">
            <summary>
            Adds and configures an YamlDotNet <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer"/> and <see cref="T:YamlDotNet.Serialization.IDeserializer"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="serializerConfiguration">The <see cref="T:System.Action`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer"/> to add</param>
            <param name="deserializerConfiguration">The <see cref="T:System.Action`1"/> used to configure the <see cref="T:YamlDotNet.Serialization.IDeserializer"/> to add</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IServiceCollectionExtensions.AddYamlDotNetSerializer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{YamlDotNet.Serialization.SerializerBuilder},System.Action{YamlDotNet.Serialization.DeserializerBuilder})">
            <summary>
            Adds and configures a <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="serializerConfiguration">The <see cref="T:System.Action`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer"/> to add</param>
            <param name="deserializerConfiguration">The <see cref="T:System.Action`1"/> used to configure the <see cref="T:YamlDotNet.Serialization.IDeserializer"/> to add</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IServiceCollectionExtensions.AddServerlessWorkflow(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds and configures Serverless Workflow services (<see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer"/>s, <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/>, <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/>, ...)
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.StringExtensions">
            <summary>
            Exposes extensions for <see cref="T:System.String"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.StringExtensions.ToCamelCase(System.String)">
            <summary>
            Converts the specified text to a camel-cased string
            </summary>
            <param name="text">The text to convert</param>
            <returns>The camel-cased text</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.TypeExtensions">
            <summary>
            Exposes extensions for <see cref="T:System.Type"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.TypeExtensions.IsNullable(System.Type)">
            <summary>
            Gets a boolean indicating whether or not the type is a nullable type
            </summary>
            <param name="extended">The extended type</param>
            <returns>A boolean indicating whether or not the type is a nullable type</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.TypeExtensions.TryGetCustomAttribute``1(System.Type,``0@)">
            <summary>
            Attempts to get a custom attribute of the specified type
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute to get</typeparam>
            <param name="extended">The extended type</param>
            <param name="attribute">The resulting custom attribute</param>
            <returns>A boolean indicating whether or not the custom attribute of the specified type could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.TypeExtensions.GetDefaultValue(System.Type)">
            <summary>
            Gets the type's default value
            </summary>
            <param name="extended">The extended type</param>
            <returns>The type's default value</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.FunctionType">
            <summary>
            Enumerates all types of functions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.Rest">
            <summary>
            Indicates a REST function
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.Expression">
            <summary>
            Indicates an expression
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Iso8601TimeSpan">
            <summary>
            Represents an helper class for handling ISO 8601 timespans
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Iso8601TimeSpan.Parse(System.String)">
            <summary>
            Parses the specified input
            </summary>
            <param name="input">The input string to parse</param>
            <returns>The parsed <see cref="T:System.TimeSpan"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Iso8601TimeSpan.Format(System.TimeSpan)">
            <summary>
            Formats the specified <see cref="T:System.TimeSpan"/>
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan"/> to format</param>
            <returns>The parsed <see cref="T:System.TimeSpan"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.ParallelCompletionType">
            <summary>
            Enumerates all parallel completion types
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ParallelCompletionType.And">
            <summary>
            Indicates that all branches should be completed before completing the parallel execution
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ParallelCompletionType.Xor">
            <summary>
            Indicates that the first branch to complete will complete the parallel execution, thus potentially cancelling running branches
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ParallelCompletionType.N">
            <summary>
            Indicates that 'N' amount of branches should complete before completing the parallel execution, thus potentially cancelling running branches
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorAttribute">
            <summary>
            Represents the <see cref="T:System.Attribute"/> used to indicate the property used to discriminate derived types of the marked class
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Serialization.DiscriminatorAttribute.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorAttribute"/>
            </summary>
            <param name="property">The name of the property used to discriminate derived types of the class marked by the <see cref="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorAttribute"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Serialization.DiscriminatorAttribute.Property">
            <summary>
            Gets the name of the property used to discriminate derived types of the class marked by the <see cref="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorAttribute"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorValueAttribute">
            <summary>
            Represents the <see cref="T:System.Attribute"/> used to indicate the discriminator value of a derived type
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Serialization.DiscriminatorValueAttribute.#ctor(System.Object)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorValueAttribute"/>
            </summary>
            <param name="value">The value used to discriminate the derived type marked by the <see cref="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorValueAttribute"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Serialization.DiscriminatorValueAttribute.Value">
            <summary>
            Gets the value used to discriminate the derived type marked by the <see cref="T:ServerlessWorkflow.Sdk.Serialization.DiscriminatorValueAttribute"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Action">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.FromStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.FilterResults(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.ToStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Consume(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Consume(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Consume(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Invoke(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Invoke(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Invoke(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.ThenProduce(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithContextAttribute(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithContextAttribute(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithArgument(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithArguments(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Branch">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.RunSubflow(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.Action(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.Action(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.FilterPayload(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.ToStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.On(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder.WithExpression(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.DelayStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DelayStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DelayStateBuilder.For(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.ErrorHandler">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.Outcome">
            <summary>
            Gets the service used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>'s outcome
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.When(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.When(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.WhenAny">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.UseRetryStrategy(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/> interface
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.Event">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.WithSource(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.WithType(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.CorrelateUsing(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.CorrelateUsing(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.CorrelateUsing(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.IsConsumed">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.IsProduced">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.Trigger(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.WaitForAll">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.WaitForAny">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.For(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.Forever">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Trigger">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.On(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder}[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.FilterPayload(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.ToStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.On(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.Timeout">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.After(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.InterruptExecution(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.Run(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.Run(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.Run(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ExecutionTimeoutBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.RunSubflow(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.UseInputCollection(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.UseIterationParameter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.UseOutputCollection(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.WithMaxIterations(System.Nullable{System.UInt32})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/> interface
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.Function">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.SetOperationExpression(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.SetOperationUri(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder.Data(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.FromStateData(System.String)">
            <summary>
            Configures the workflow expression used to filter the state data passed to the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s input state data</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.FilterResults(System.String)">
            <summary>
            Configures the workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.ToStateData(System.String)">
            <summary>
            Configures the workflow expression used to merge the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results into the state data
            </summary>
            <param name="expression">The workflow expression used to merge the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results into the state data</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Invoke(System.String)">
            <summary>
            Invokes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <param name="function">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to invoke. Requires the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to have been previously defined</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Invoke(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <summary>
            Invokes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <param name="functionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to invoke</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Invoke(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <summary>
            Invokes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to invoke</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Consume(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to consume the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to consume. Requires the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to have been previously defined</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Consume(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to consume the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to create the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Consume(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to consume the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionCollectionBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build a collection of <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s
            </summary>
            <typeparam name="TContainer"></typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionCollectionBuilder`1.Sequentially">
            <summary>
            Configures the container to run defined actions sequentially
            </summary>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionCollectionBuilder`1.Concurrently">
            <summary>
            Configures the container to run defined actions concurrently
            </summary>
            <returns>The configured container</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1">
            <summary>
            Defines the fundamentals of a service that defines an <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <typeparam name="TContainer">The container's type</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to be executed by the container
            </summary>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to be executed by the container
            </summary>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to be executed by the container
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured container</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder">
            <summary>
            Defines the fundamentals of a service used to configure <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder.WithName(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>'s name
            </summary>
            <param name="name">The <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>'s name</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder">
            <summary>
            Defines the fundamentals of the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.Action(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to execute the specified <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> upon consumption of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="actionSetup">The <see cref="T:System.Action`1"/> used to create the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.Action(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to execute the specified <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> upon consumption of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.On(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to wait for the consumption of a <see cref="T:CloudNative.CloudEvents.CloudEvent"/> defined by specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> that defines the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to wait for the consumption of a <see cref="T:CloudNative.CloudEvents.CloudEvent"/> defined by specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> that defines the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to wait for the consumption of a <see cref="T:CloudNative.CloudEvents.CloudEvent"/> defined by specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> that defines the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.FilterPayload(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to filter the payload of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="expression">The workflow expression used to filter payload of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.ToStateData(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to filter the payload of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="expression">The expression that selects a state data element to which the action results should be added/merged into</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder">
            <summary>
            Defines the fundamentals of a service used to build data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder.WithExpression(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s workflow expression used to evaluate the data
            </summary>
            <param name="expression">The workflow expression used to evaluate the data</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder})">
            <summary>
            Creates and configures a new data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
            <param name="caseBuilder">The <see cref="T:System.Action`1"/> used to build the data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.DelayStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder.For(System.TimeSpan)">
            <summary>
            Configures the duration of the workflow execution's delay
            </summary>
            <param name="duration">The duration of the workflow execution's delay</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.UseRetryStrategy(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> used by 
            </summary>
            <param name="strategy">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to use</param>
            <returns></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.When(System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to catch the specified errors
            </summary>
            <param name="error">The domain-specific errors to catch</param>
            <param name="errorCode">The code of the errors to catch</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.When(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to catch the specified errors
            </summary>
            <param name="error">The domain-specific errors to catch</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.WhenAny">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to catch any error
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.IsConsumed">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Kind"/> to <see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.IsProduced">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Kind"/> to <see cref="F:ServerlessWorkflow.Sdk.EventKind.Produced"/>
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.WithSource(System.Uri)">
            <summary>
            Sets the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> source of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build
            </summary>
            <param name="source">The <see cref="T:CloudNative.CloudEvents.CloudEvent"/> source of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.WithType(System.String)">
            <summary>
            Sets the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> type of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build
            </summary>
            <param name="type">The <see cref="T:CloudNative.CloudEvents.CloudEvent"/> type of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.CorrelateUsing(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to use the specified <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute while performing correlation
            </summary>
            <param name="contextAttributeName">The name of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.CorrelateUsing(System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to use the specified <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute while performing correlation
            </summary>
            <param name="contextAttributeName">The name of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to use</param>
            <param name="contextAttributeValue">The static value or workflow expression used during correlation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.CorrelateUsing(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to use the specified <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute while performing correlation
            </summary>
            <param name="correlations">A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the context attribute key/value pairs to used when performing correlation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder">
            <summary>
            Defines the fundamentals of the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.Trigger(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder})">
            <summary>
            Builds, configures and adds a new <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>
            </summary>
            <param name="triggerSetup">The <see cref="T:System.Action`1"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.WaitForAll">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> to wait for all triggers to complete before resuming the workflow's execution
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.WaitForAny">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> to wait for any trigger to complete before resuming the workflow's execution
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.For(System.TimeSpan)">
            <summary>
            Sets the duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> times out
            </summary>
            <param name="duration">The duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> times out</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.Forever">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> to never time out
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder">
            <summary>
            Defines the fundamentals of the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.On(System.String[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to consume the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s defined by the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
            <param name="events">An array containing the reference names of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s that define the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder}[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to consume the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s defined by the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
            <param name="eventSetups">An array containing the <see cref="T:System.Action"/>s used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s that define the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to consume the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s defined by the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
            <param name="events">An array the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s that define the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.FilterPayload(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to filter the payload of consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s
            </summary>
            <param name="expression">The workflow expression used to filter payload of consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.ToStateData(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to select the state data element to which the action results should be added/merged into
            </summary>
            <param name="expression">The expression that selects a state data element to which the action results should be added/merged into</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.On(System.String)">
            <summary>
            Creates and configures a new outcome when consuming any of the specified events
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s to consume</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> used to build the outcome of the consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Creates and configures a new outcome when consuming any of the specified events
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s to consume</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> used to build the outcome of the consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Creates and configures a new outcome when consuming any of the specified events
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s to consume</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> used to build the outcome of the consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder.Timeout(System.TimeSpan)">
            <summary>
            Sets the duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s execution times out
            </summary>
            <param name="duration">The duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s execution times out</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder})">
            <summary>
            Creates and configures a new data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
            <param name="caseBuilder">The <see cref="T:System.Action`1"/> used to build the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s of type <see cref="F:ServerlessWorkflow.Sdk.ActionType.EventTrigger"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.ThenProduce(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to produce the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> when triggered
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to produce. Requires the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to have been previously defined.</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.WithContextAttribute(System.String,System.String)">
            <summary>
            Adds the specified context attribute to the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> produced as a result of the trigger
            </summary>
            <param name="name">The name of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to add</param>
            <param name="value">The value of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.WithContextAttribute(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds the specified context attribute to the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> produced as a result of the trigger
            </summary>
            <param name="contextAttributes">An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the context attributes to add to the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>e produced as a result of the trigger</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder.After(System.TimeSpan)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution to time out after the specified duration
            </summary>
            <param name="duration">The duration after which  to time out the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder.InterruptExecution(System.Boolean)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to interrupt its execution on timeout 
            </summary>
            <param name="interrupts">A boolean indicating whether or not interrupt the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder.Run(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> before terminating its execution
            </summary>
            <param name="state">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to run before termination</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder.Run(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> before terminating its execution
            </summary>
            <param name="stateSetup">The <see cref="T:System.Func`2"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to run before termination</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder.Run(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> before terminating its execution
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to run before termination</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.UseInputCollection(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/> to use the specified expression when resolving the input collection
            </summary>
            <param name="expression">The expression to use when resolving the input collection</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.UseIterationParameter(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/> to use the specified expression when resolving the iteration parameter
            </summary>
            <param name="expression">The expression to use when resolving the iteration parameter</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.UseOutputCollection(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/> to use the specified expression when resolving the output collection
            </summary>
            <param name="expression">The expression to use when resolving the output collection</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.WithMaxIterations(System.Nullable{System.UInt32})">
            <summary>
            Configures the maximum amount of iterations allowed
            </summary>
            <param name="max">The maximum amount of iterations allowed</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder">
            <summary>
            Defines the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s of type <see cref="F:ServerlessWorkflow.Sdk.ActionType.FunctionCall"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder.WithArgument(System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to use the specified argument when performing the function call
            </summary>
            <param name="name">The name of the argument to add</param>
            <param name="value">The value or workflow expression of the argument to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder.WithArguments(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to use the specified argument when performing the function call
            </summary>
            <param name="args">An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the name/value pairs of the arguments to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.SetOperationExpression(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation expression. Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Type"/> to <see cref="F:ServerlessWorkflow.Sdk.FunctionType.Expression"/>
            </summary>
            <param name="operation">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation expression</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.SetOperationUri(System.Uri)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation <see cref="T:System.Uri"/>. Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Type"/> to <see cref="F:ServerlessWorkflow.Sdk.FunctionType.Rest"/>
            </summary>
            <param name="operation">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation <see cref="T:System.Uri"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder.Data(System.Object)">
            <summary>
            Injects the specified data into the workflow
            </summary>
            <param name="data">The data to inject</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build metadata containers
            </summary>
            <typeparam name="TContainer">The type of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1"/></typeparam>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1.Metadata">
            <summary>
            Gets the container's metadata
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1.WithMetadata(System.String,System.Object)">
            <summary>
            Adds the specified metadata
            </summary>
            <param name="key">The metadata key</param>
            <param name="value">The metadata value</param>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds the specified metadata
            </summary>
            <param name="metadata">An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the container's metadata</param>
            <returns>The configured container</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>s
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder.Branch(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>
            </summary>
            <param name="branchSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder.WaitForAll">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/> to wait for all branches to complete before resuming the workflow's execution
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder.WaitForAny">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/> to wait for any branch to complete before resuming the workflow's execution
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder.WaitFor(System.UInt32)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/> to wait for the specified amount of branches to complete before resuming the workflow's execution
            </summary>
            <param name="amount">The amount of branches to wait for the execution of</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> charts
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the pipeline
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the pipeline
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the pipeline
            </summary>
            <param name="functionSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the pipeline
            </summary>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddState(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to the pipeline
            </summary>
            <param name="stateSetup">The <see cref="T:System.Func`2"/> used to build and configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddState(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to the pipeline
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to add</param>
            <returns>The newly added <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.Then(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Transitions to the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.Then(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Transitions to the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.EndsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow upon completion
            </summary>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow with</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.EndsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow upon completion
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow execution with</param>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow with</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.End">
            <summary>
            Configures the last <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow upon completion
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.Build">
            <summary>
            Builds the pipeline
            </summary>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s the pipeline is made out of</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithDelayOf(System.TimeSpan)">
            <summary>
            Sets the duration between successive retry attempts
            </summary>
            <param name="duration">The duration to wait between two retry attempts</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithNoDelay">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to not delay successive retry attempts
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithMaxDelay(System.TimeSpan)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/>'s max delay between retry attempts
            </summary>
            <param name="duration">The maximum duration to wait between two retry attempt</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.MaxAttempts(System.UInt32)">
            <summary>
            Configures the maximum amount of retry attempts
            </summary>
            <param name="maxAttempts">The maximum amount of retry attempts</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithDelayIncrementation(System.TimeSpan)">
            <summary>
            Configures the duration which will be added to the delay between successive retries
            </summary>
            <param name="duration">The duration which will be added to the delay between successive retries</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithDelayMultiplier(System.Single)">
            <summary>
            Configures the value by which the delay is multiplied before each attempt.
            </summary>
            <param name="multiplier">The value by which the delay is multiplied before each attempt.</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithJitterMultiplier(System.Single)">
            <summary>
            Configures the maximum amount of random time added or subtracted from the delay between each retry relative to total delay
            </summary>
            <param name="multiplier">The maximum amount of random time added or subtracted from the delay between each retry relative to total delay</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithJitterDuration(System.TimeSpan)">
            <summary>
            Configures the absolute maximum amount of random time added or subtracted from the delay between each retry
            </summary>
            <param name="duration">The absolute maximum amount of random time added or subtracted from the delay between each retry</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder">
            <summary>
            Defines the fundamentals of a service used to configure a <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1">
            <summary>
            Defines the fundamentals of a service used to configure a <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <typeparam name="TState">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.FilterInput(System.String)">
            <summary>
            Filters the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s input
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s input</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.FilterOutput(System.String)">
            <summary>
            Filters the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s output
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s output</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.HandleError(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder})">
            <summary>
            Configures the handling for the specified error
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.CompensateWith(System.String)">
            <summary>
            Compensates the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to use for compensation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.CompensateWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Compensates the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">A <see cref="T:System.Func`2"/> used to create the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to use for compensation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.CompensateWith(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <summary>
            Compensates the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="state">Tthe <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to use for compensation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory">
            <summary>
            Defines the fundamentals of a service used to create <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> instances
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Callback">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Delay(System.TimeSpan)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.DelayStateDefinition"/>
            </summary>
            <param name="duration">The delay's duration</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Delay">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.DelayStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Inject">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Inject(System.Object)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>
            </summary>
            <param name="data">The data to inject</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
            <param name="name">the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.ExecuteInParallel">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.ForEach(System.String,System.String,System.String)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/>
            </summary>
            <param name="inputCollection">An expression that defines the input collection</param>
            <param name="iterationParameter">An expression that defines the iteration parameter</param>
            <param name="outputCollection">An expression that defines the output collection</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Switch">
            <summary>
            Creates and configures a new data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.SwitchEvents">
            <summary>
            Creates and configures a new <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Events">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder.TransitionTo(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Transitions to the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder.End">
            <summary>
            Configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowRunnerBuilder">
            <summary>
            Defines the fundamentals of a service used to build workflow runners
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowRunnerBuilder.RunSubflow(System.String)">
            <summary>
            Runs the specified workflow
            </summary>
            <param name="workflowId">The workflow to run</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchCaseBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchCaseBuilder`1.WithName(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder.Data">
            <summary>
            Switches on the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s data 
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder.Events">
            <summary>
            Switches on consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithId(System.String)">
            <summary>
            Sets the id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="id">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithDescription(System.String)">
            <summary>
            Sets the description of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="description">The description of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithVersion(System.String)">
            <summary>
            Sets the version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="version">The description of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.Annotate(System.String)">
            <summary>
            Annotates the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to build
            </summary>
            <param name="annotation">The annotation to append to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.UseExpressionLanguage(System.String)">
            <summary>
            Configures the expression language used by the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to build
            </summary>
            <param name="language">The expression language to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithExecutionTimeout(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition"/>
            </summary>
            <param name="timeoutSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.ExecutionTimeoutDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.KeepActive(System.Boolean)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to not terminate its execution when there are no active execution paths
            </summary>
            <param name="keepActive">A boolean indicating whether or not to keep the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> active</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.StartsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Sets and configures the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.StartsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Sets and configures the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="name">The name of the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="functionSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddRetryStrategy(ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="strategy">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddRetryStrategy(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="retryStrategySetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1">
            <summary>
            Represents the base class for all <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1"/>
            </summary>
            <typeparam name="TContainer">The type of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1"/></typeparam>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1.WithMetadata(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.Branch(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.WaitFor(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.WaitForAll">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.WaitForAny">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.States">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s the pipeline is made out of
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.CurrentStep">
            <summary>
            Gets the current <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> in the main pipeline of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddState(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddState(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Then(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Then(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.EndsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.EndsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.End">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/> interface
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.Strategy">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithNoDelay">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithDelayOf(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithDelayIncrementation(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithDelayMultiplier(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithMaxDelay(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.MaxAttempts(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithJitterDuration(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithJitterMultiplier(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> interface
            </summary>
            <typeparam name="TState">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.State">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.FilterInput(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.FilterOutput(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.CompensateWith(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.CompensateWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.CompensateWith(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.HandleError(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory"/> belongs to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Callback">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Delay(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Delay">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Events">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.ExecuteInParallel">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.ForEach(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Inject">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Inject(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Switch">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.SwitchEvents">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.Outcome">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.TransitionTo(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.End">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchCaseBuilder`1"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2.Case">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Data">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Events">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Timeout(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Pipeline">
            <summary>
            Gets the service used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StartDefinition"/> chart
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithId(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithDescription(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithVersion(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Annotate(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.UseExpressionLanguage(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithExecutionTimeout(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IExecutionTimeoutBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.KeepActive(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddRetryStrategy(ServerlessWorkflow.Sdk.Models.RetryStrategyDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddRetryStrategy(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader">
            <summary>
            Defines the fundamentals of a service used to read <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader.Read(System.IO.Stream,ServerlessWorkflow.Sdk.WorkflowDefinitionFormat)">
            <summary>
            Reads a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from the specified <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from</param>
            <param name="format">The format of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to read. Defaults to '<see cref="F:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat.Yaml"/>'</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter">
            <summary>
            Defines the fundamentals of a service used to write <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter.Write(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.IO.Stream,ServerlessWorkflow.Sdk.WorkflowDefinitionFormat)">
            <summary>
            Writes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to a <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to write</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from</param>
            <param name="format">The format of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to read. Defaults to '<see cref="F:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat.Yaml"/>'</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.#ctor(ServerlessWorkflow.Sdk.Services.Serialization.IJsonSerializer,ServerlessWorkflow.Sdk.Services.Serialization.IYamlSerializer)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader"/>
            </summary>
            <param name="jsonSerializer">The service used to serialize and deserialize JSON</param>
            <param name="yamlSerializer">The service used to serialize and deserialize YAML</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.JsonSerializer">
            <summary>
            Gets the service used to serialize and deserialize JSON
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.YamlSerializer">
            <summary>
            Gets the service used to serialize and deserialize YAML
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.Read(System.IO.Stream,ServerlessWorkflow.Sdk.WorkflowDefinitionFormat)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.Create">
            <summary>
            Creates a new default instance of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/> interface
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.#ctor(ServerlessWorkflow.Sdk.Services.Serialization.IJsonSerializer,ServerlessWorkflow.Sdk.Services.Serialization.IYamlSerializer)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter"/>
            </summary>
            <param name="jsonSerializer">The service used to serialize and deserialize JSON</param>
            <param name="yamlSerializer">The service used to serialize and deserialize YAML</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.JsonSerializer">
            <summary>
            Gets the service used to serialize and deserialize JSON
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.YamlSerializer">
            <summary>
            Gets the service used to serialize and deserialize YAML
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.Write(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.IO.Stream,ServerlessWorkflow.Sdk.WorkflowDefinitionFormat)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.Create">
            <summary>
            Creates a new default instance of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/> interface
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Serialization.IJsonSerializer">
            <summary>
            Defines the fundamentals of a service used to serialize and deserialize JSON
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IJsonSerializer.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes the specified JSON string
            </summary>
            <param name="json">The JSON string to deserialize</param>
            <param name="returnType">The expected return type</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IJsonSerializer.DeserializeAsync(System.String,System.Type,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified JSON string
            </summary>
            <param name="json">The JSON string to deserialize</param>
            <param name="returnType">The expected return type</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IJsonSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified JSON string
            </summary>
            <typeparam name="T">The expected return type</typeparam>
            <param name="json">The JSON string to deserialize</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IJsonSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified JSON string
            </summary>
            <typeparam name="T">The expected return type</typeparam>
            <param name="json">The JSON string to deserialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer">
            <summary>
            Defines the fundamentals of a service used to serialize/deserialize objects
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serializes a value to an output <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="value">The value to serialize</param>
            <param name="output">The output <see cref="T:System.IO.Stream"/> to serialize the specified value to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.SerializeAsync(System.Object,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Serializes a value to an output <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="value">The value to serialize</param>
            <param name="output">The output <see cref="T:System.IO.Stream"/> to serialize the specified value to</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Serialize(System.Object,System.IO.Stream,System.Type)">
            <summary>
            Serializes a value to an output <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="value">The value to serialize</param>
            <param name="output">The output <see cref="T:System.IO.Stream"/> to serialize the specified value to</param>
            <param name="type">The type of the value to serialize</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.SerializeAsync(System.Object,System.IO.Stream,System.Type,System.Threading.CancellationToken)">
            <summary>
            Serializes a value to an output <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="value">The value to serialize</param>
            <param name="output">The output <see cref="T:System.IO.Stream"/> to serialize the specified value to</param>
            <param name="type">The type of the value to serialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Serialize(System.Object)">
            <summary>
            Serializes a value to a byte array
            </summary>
            <param name="value">The value to serialize</param>
            <returns>A new byte array representing the serialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.SerializeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Serializes a value to a byte array
            </summary>
            <param name="value">The value to serialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new byte array representing the serialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Serialize(System.Object,System.Type)">
            <summary>
            Serializes a value to a byte array
            </summary>
            <param name="value">The value to serialize</param>
            <param name="type">The type of the value to serialize</param>
            <returns>A new byte array representing the serialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.SerializeAsync(System.Object,System.Type,System.Threading.CancellationToken)">
            <summary>
            Serializes a value to a byte array
            </summary>
            <param name="value">The value to serialize</param>
            <param name="type">The type of the value to serialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new byte array representing the serialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Deserialize``1(System.IO.Stream)">
            <summary>
            Deserialize a value from an input <see cref="T:System.IO.Stream"/>
            </summary>
            <typeparam name="T">The type of the value to deserialize</typeparam>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to deserialize the value from</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.DeserializeAsync``1(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Deserialize a value from an input <see cref="T:System.IO.Stream"/>
            </summary>
            <typeparam name="T">The type of the value to deserialize</typeparam>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to deserialize the value from</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Deserialize``1(System.Byte[])">
            <summary>
            Deserialize a value from an input byte array
            </summary>
            <typeparam name="T">The type of the value to deserialize</typeparam>
            <param name="input">The input byte array to deserialize the value from</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.DeserializeAsync``1(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Deserialize a value from an input byte array
            </summary>
            <typeparam name="T">The type of the value to deserialize</typeparam>
            <param name="input">The input byte array to deserialize the value from</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deserialize a value from an input <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to deserialize the value from</param>
            <param name="returnType">The type of the value to deserialize</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Threading.CancellationToken)">
            <summary>
            Deserialize a value from an input <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to deserialize the value from</param>
            <param name="returnType">The type of the value to deserialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.Deserialize(System.Byte[],System.Type)">
            <summary>
            Deserialize a value from an input byte array
            </summary>
            <param name="input">The input byte array to deserialize the value from</param>
            <param name="returnType">The type of the value to deserialize</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer.DeserializeAsync(System.Byte[],System.Type,System.Threading.CancellationToken)">
            <summary>
            Deserialize a value from an input byte array
            </summary>
            <param name="input">The input byte array to deserialize the value from</param>
            <param name="returnType">The type of the value to deserialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Serialization.IYamlSerializer">
            <summary>
            Defines the fundamentals of a service used to serialize and deserialize YAML
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IYamlSerializer.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes the specified YAML string
            </summary>
            <param name="yaml">The YAML string to deserialize</param>
            <param name="returnType">The expected return type</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IYamlSerializer.DeserializeAsync(System.String,System.Type,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified YAML string
            </summary>
            <param name="yaml">The YAML string to deserialize</param>
            <param name="returnType">The expected return type</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IYamlSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified YAML string
            </summary>
            <typeparam name="T">The expected return type</typeparam>
            <param name="yaml">The YAML string to deserialize</param>
            <returns>The deserialized value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.IYamlSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified YAML string
            </summary>
            <typeparam name="T">The expected return type</typeparam>
            <param name="yaml">The YAML string to deserialize</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The deserialized value</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer">
            <summary>
            Represents the default Newtonsoft Json implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.#ctor(Microsoft.Extensions.Options.IOptions{Newtonsoft.Json.JsonSerializerSettings})">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer"/>
            </summary>
            <param name="settings">The service used to access the current <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Settings">
            <summary>
            Gets the current <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Deserialize``1(System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Deserialize``1(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.DeserializeAsync``1(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Deserialize(System.IO.Stream,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Deserialize(System.Byte[],System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.DeserializeAsync(System.Byte[],System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Deserialize(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.DeserializeAsync(System.String,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Deserialize``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Serialize(System.Object,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.SerializeAsync(System.Object,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Serialize(System.Object,System.IO.Stream,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.SerializeAsync(System.Object,System.IO.Stream,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Serialize(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.SerializeAsync(System.Object,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.Serialize(System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.NewtonsoftJsonSerializer.SerializeAsync(System.Object,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer">
            <summary>
            Represents the default <see href="https://github.com/aaubry/YamlDotNet">YamlDotNet</see> implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.ISerializer"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.#ctor(YamlDotNet.Serialization.ISerializer,YamlDotNet.Serialization.IDeserializer)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer"/>
            </summary>
            <param name="serializer">The underlying <see cref="T:YamlDotNet.Serialization.ISerializer"/></param>
            <param name="deserializer">The underlying <see cref="T:YamlDotNet.Serialization.IDeserializer"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Serializer">
            <summary>
            Gets the underlying <see cref="T:YamlDotNet.Serialization.ISerializer"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Deserializer">
            <summary>
            Gets the underlying <see cref="T:YamlDotNet.Serialization.IDeserializer"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Deserialize``1(System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.DeserializeAsync``1(System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Deserialize``1(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.DeserializeAsync``1(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Deserialize(System.IO.Stream,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Deserialize(System.Byte[],System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.DeserializeAsync(System.Byte[],System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Deserialize(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.DeserializeAsync(System.String,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Deserialize``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Serialize(System.Object,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.SerializeAsync(System.Object,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Serialize(System.Object,System.IO.Stream,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.SerializeAsync(System.Object,System.IO.Stream,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Serialize(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.SerializeAsync(System.Object,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.Serialize(System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Serialization.YamlDotNetSerializer.SerializeAsync(System.Object,System.Type,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.StateType">
            <summary>
            Enumerates all types of workflow states
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Operation">
            <summary>
            Indicates an operation state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Delay">
            <summary>
            Indicates a delay state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Event">
            <summary>
            Indicates an event state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Parallel">
            <summary>
            Indicates a parallel state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Switch">
            <summary>
            Indicates a switch state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.SubFlow">
            <summary>
            Indicates a subflow state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Inject">
            <summary>
            Indicates an inject state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.ForEach">
            <summary>
            Indicates a foreach state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Callback">
            <summary>
            Indicates a callback state
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.SwitchStateType">
            <summary>
            Enumerates all types of switch states
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.SwitchStateType.Data">
            <summary>
            Indicates a data switch
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.SwitchStateType.Event">
            <summary>
            Indicates an event switch
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.EnumHelper">
            <summary>
            Defines helper methods to handle <see cref="T:System.Enum"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.EnumHelper.Parse(System.String,System.Type)">
            <summary>
            Parses the specified input into the desired <see cref="T:System.Enum"/>
            </summary>
            <param name="value">The value to parse</param>
            <param name="enumType">The type of the enum to parse</param>
            <returns>The parsed value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.EnumHelper.Parse``1(System.String)">
            <summary>
            Parses the specified input into the desired enum
            </summary>
            <typeparam name="TEnum">The type of the enum to parse</typeparam>
            <param name="value">The value to parse</param>
            <returns>The parsed value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.EnumHelper.Stringify(System.Object,System.Type)">
            <summary>
            Gets the string representation for the specified enum value
            </summary>
            <param name="value">The value to stringify</param>
            <param name="enumType">The type of the enum to stringify</param>
            <returns>The string representation for the specified enum value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.EnumHelper.Stringify``1(``0)">
            <summary>
            Gets the string representation for the specified enum value
            </summary>
            <param name="value">The value to stringify</param>
            <typeparam name="TEnum">The type of the enum to stringify</typeparam>
            <returns>The string representation for the specified enum value</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.EnumHelper.GetFlags``1(``0)">
            <summary>
            Gets all the enum values contained by the specified flags value
            </summary>
            <typeparam name="TEnum">The type of the enumeration to get the flags of</typeparam>
            <param name="flags">The flags to get the values of</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing all the enum values contained by the specifed flags value</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat">
            <summary>
            Enumerates all workflow definition formats
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat.Yaml">
            <summary>
            Indicates YAML
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat.Json">
            <summary>
            Indicates JSON
            </summary>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.AbstractClassConverter`1">
            <summary>
            Represents the <see cref="T:System.Text.Json.Serialization.JsonConverter"/> used to convert to/from an abstract class
            </summary>
            <typeparam name="T">The type of the abstract class to convert to/from</typeparam>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Initializes a new <see cref="T:System.Text.Json.Serialization.Converters.AbstractClassConverter`1"/>
            </summary>
            <param name="jsonSerializerOptions">The current <see cref="P:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.JsonSerializerOptions"/></param>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.JsonSerializerOptions">
            <summary>
            Gets the current <see cref="P:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.JsonSerializerOptions"/>
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.DiscriminatorProperty">
            <summary>
            Gets the discriminator <see cref="T:System.Reflection.PropertyInfo"/> of the abstract type to convert
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.TypeMappings">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the mappings of the converted type's derived types
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.AbstractClassConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory">
            <summary>
            Represents the <see cref="T:System.Text.Json.Serialization.JsonConverterFactory"/> used to create <see cref="T:System.Text.Json.Serialization.Converters.AbstractClassConverter`1"/>
            </summary>
        </member>
        <member name="F:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory.Converters">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the mappings of types to their respective <see cref="T:System.Text.Json.Serialization.JsonConverter"/>
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Initializes a new <see cref="T:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory"/>
            </summary>
            <param name="jsonSerializerOptions">The current <see cref="T:System.Text.Json.JsonSerializerOptions"/></param>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory.JsonSerializerOptions">
            <summary>
            Gets the current <see cref="P:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory.JsonSerializerOptions"/>
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.AbstractClassConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.Iso8601TimeSpanConverter">
            <summary>
            Represents the <see cref="T:System.Text.Json.Serialization.JsonConverter`1"/> used to convert <see cref="T:System.TimeSpan"/>s from and to ISO 8601 durations
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.Iso8601TimeSpanConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.Iso8601TimeSpanConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.TimeSpan},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.StringEnumConverter`1">
            <summary>
            Represents the <see cref="T:System.Text.Json.Serialization.JsonConverter`1"/> used to convert from and to <see cref="T:System.Enum"/>s
            </summary>
            <typeparam name="T">The type to convert</typeparam>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverter`1.#ctor(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Initializes a new <see cref="T:System.Text.Json.Serialization.Converters.StringEnumConverter`1"/>
            </summary>
            <param name="underlyingType">The underlying <see cref="T:System.Enum"/>'s type</param>
            <param name="jsonSerializerOptions">The current <see cref="T:System.Text.Json.JsonSerializerOptions"/></param>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.UnderlyingType">
            <summary>
            Gets the underlying <see cref="T:System.Enum"/>'s type
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.JsonSerializerOptions">
            <summary>
            Gets the current <see cref="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.JsonSerializerOptions"/>
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.TypeCode">
            <summary>
            Gets the <see cref="T:System.Enum"/>'s <see cref="T:System.TypeCode"/>
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.IsFlags">
            <summary>
            Gets a boolean indicating whether or not the specified <see cref="T:System.Enum"/> is flags
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.ValueMappings">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing mappings of raw values to field metadata
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.NameMappings">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing mappings of names to field metadata
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.StringEnumConverter`1.EnumFieldMetadata">
            <summary>
            Holds information about an <see cref="T:System.Enum"/>'s field
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverter`1.EnumFieldMetadata.#ctor(System.String,System.String,System.Enum,System.UInt64)">
            <summary>
            Initializes a new <see cref="T:System.Text.Json.Serialization.Converters.StringEnumConverter`1.EnumFieldMetadata"/>
            </summary>
            <param name="name">The <see cref="T:System.Enum"/> field's name</param>
            <param name="transformedName">The <see cref="T:System.Enum"/> field's transformed name</param>
            <param name="value">The <see cref="T:System.Enum"/> field's value</param>
            <param name="rawValue">The <see cref="T:System.Enum"/> field's raw value</param>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.EnumFieldMetadata.Name">
            <summary>
            Gets the <see cref="T:System.Enum"/>'s field name
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.EnumFieldMetadata.TransformedName">
            <summary>
            Gets the <see cref="T:System.Enum"/> field's transformed name
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.EnumFieldMetadata.Value">
            <summary>
            Gets the <see cref="T:System.Enum"/> field's value
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverter`1.EnumFieldMetadata.RawValue">
            <summary>
            Gets the <see cref="T:System.Enum"/> field's raw value
            </summary>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.StringEnumConverterFactory">
            <summary>
            Represents the <see cref="T:System.Text.Json.Serialization.JsonConverterFactory"/> used to create <see cref="T:System.Text.Json.Serialization.Converters.StringEnumConverter`1"/>
            </summary>
        </member>
        <member name="F:System.Text.Json.Serialization.Converters.StringEnumConverterFactory.Converters">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the mappings of types to their respective <see cref="T:System.Text.Json.Serialization.JsonConverter"/>
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverterFactory.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Initializes a new <see cref="T:System.Text.Json.Serialization.Converters.StringEnumConverterFactory"/>
            </summary>
            <param name="jsonSerializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions"/> for writing enum values</param>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverterFactory.#ctor">
            <summary>
            Initializes a new <see cref="T:System.Text.Json.Serialization.Converters.StringEnumConverterFactory"/>
            </summary>
        </member>
        <member name="P:System.Text.Json.Serialization.Converters.StringEnumConverterFactory.JsonSerializerOptions">
            <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions"/> for writing enum values
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverterFactory.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.StringEnumConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Newtonsoft.Json.Converters.AbstractClassConverter`1">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConvert"/> used to deserialize implementations of the specified abstract class
            </summary>
            <typeparam name="T">The type of the abstract class to deserialize</typeparam>
        </member>
        <member name="M:Newtonsoft.Json.Converters.AbstractClassConverter`1.#ctor">
            <summary>
            Initializes a new <see cref="T:Newtonsoft.Json.Converters.AbstractClassConverter`1"/>
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.AbstractClassConverter`1.DiscriminatorProperty">
            <summary>
            Gets the discriminator <see cref="T:System.Reflection.PropertyInfo"/> of the abstract type to convert
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.AbstractClassConverter`1.TypeMappings">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the mappings of the converted type's derived types
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.AbstractClassConverter`1.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="P:Newtonsoft.Json.Converters.AbstractClassConverter`1.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.Converters.AbstractClassConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.Converters.AbstractClassConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Newtonsoft.Json.Converters.AbstractClassConverterFactory">
            <summary>
            Represents a service used to create <see cref="T:Newtonsoft.Json.Converters.AbstractClassConverter`1"/>
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.AbstractClassConverterFactory.Converters">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the mappings of types to their respective <see cref="T:Newtonsoft.Json.JsonConverter"/>
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.AbstractClassConverterFactory.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="P:Newtonsoft.Json.Converters.AbstractClassConverterFactory.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.Converters.AbstractClassConverterFactory.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.Converters.AbstractClassConverterFactory.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Iso8601TimeSpanConverter">
            <summary>
            Represents the <see cref="T:Newtonsoft.Json.JsonConverter"/> used to convert from and to ISO 8601 timespan expressions
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Iso8601TimeSpanConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.TimeSpan,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Iso8601TimeSpanConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.TimeSpan,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.AbstractTypeDeserializer">
            <summary>
            Represents the <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/> used to deserialize abstract classes
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.AbstractTypeDeserializer.#ctor(YamlDotNet.Serialization.INodeDeserializer)">
            <summary>
            Initializes a new <see cref="T:YamlDotNet.Serialization.AbstractTypeDeserializer"/>
            </summary>
            <param name="inner">The inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/></param>
        </member>
        <member name="P:YamlDotNet.Serialization.AbstractTypeDeserializer.Inner">
            <summary>
            Gets the inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/>
            </summary>
        </member>
        <member name="P:YamlDotNet.Serialization.AbstractTypeDeserializer.Resolvers">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing all known <see cref="T:YamlDotNet.Serialization.AbstractTypeResolver"/>s
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.AbstractTypeDeserializer.Deserialize(YamlDotNet.Core.IParser,System.Type,System.Func{YamlDotNet.Core.IParser,System.Type,System.Object},System.Object@)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.AbstractTypeResolver">
            <summary>
            Represents the service used to resolve abstract type implementations
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.AbstractTypeResolver.#ctor(System.Type)">
            <summary>
            Initializes a new <see cref="T:YamlDotNet.Serialization.AbstractTypeResolver"/>
            </summary>
            <param name="abstractType">The abstract type to resolve the implementation type for</param>
        </member>
        <member name="P:YamlDotNet.Serialization.AbstractTypeResolver.AbstractType">
            <summary>
            Gets the abstract type to resolve the implementation type for
            </summary>
        </member>
        <member name="P:YamlDotNet.Serialization.AbstractTypeResolver.DiscriminatorProperty">
            <summary>
            Gets the discriminator <see cref="T:System.Reflection.PropertyInfo"/> of the abstract type to convert
            </summary>
        </member>
        <member name="P:YamlDotNet.Serialization.AbstractTypeResolver.TypeMappings">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the mappings of the converted type's derived types
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.AbstractTypeResolver.TryResolve(YamlDotNet.Serialization.ParsingEventStream,System.Type@)">
            <summary>
            Attempts to resolve the abstract type's implementation based on the specified <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/>
            </summary>
            <param name="stream">The <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/> to use to resolve the implementation type</param>
            <param name="implementationType">The resulting implementation type</param>
            <returns>A boolean indicating whether or not the implementation type could be resolved thanks to the specified <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/></returns>
        </member>
        <member name="T:YamlDotNet.Serialization.ChainedObjectGraphVisitor">
            <summary>
            Represents a <see cref="T:YamlDotNet.Serialization.ObjectGraphVisitors.ChainedObjectGraphVisitor"/> used to ignore the serialization of empty <see cref="T:System.Collections.IEnumerable"/>s
            </summary>
            <remarks>Based on <see href="https://stackoverflow.com/a/64737155/3637555">Kees C. Bakker's answer on StackOverflow</see></remarks>
        </member>
        <member name="M:YamlDotNet.Serialization.ChainedObjectGraphVisitor.#ctor(YamlDotNet.Serialization.IObjectGraphVisitor{YamlDotNet.Core.IEmitter})">
            <summary>
            Initializes a new <see cref="T:YamlDotNet.Serialization.ChainedObjectGraphVisitor"/>
            </summary>
            <param name="nextVisitor"></param>
        </member>
        <member name="M:YamlDotNet.Serialization.ChainedObjectGraphVisitor.Enter(YamlDotNet.Serialization.IObjectDescriptor,YamlDotNet.Core.IEmitter)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.ChainedObjectGraphVisitor.EnterMapping(YamlDotNet.Serialization.IPropertyDescriptor,YamlDotNet.Serialization.IObjectDescriptor,YamlDotNet.Core.IEmitter)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.ChainedObjectGraphVisitor.IsEmptyEnumerable(YamlDotNet.Serialization.IObjectDescriptor)">
            <summary>
            Determines whether or not the specified <see cref="T:YamlDotNet.Serialization.IObjectDescriptor"/> is an empty <see cref="T:System.Collections.IEnumerable"/>
            </summary>
            <param name="descriptor">The <see cref="T:YamlDotNet.Serialization.IObjectDescriptor"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:YamlDotNet.Serialization.IObjectDescriptor"/> is an empty <see cref="T:System.Collections.IEnumerable"/></returns>
        </member>
        <member name="T:YamlDotNet.Serialization.IParserExtensions">
            <summary>
            Defines extensions for <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/>
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.IParserExtensions.TryFindMappingEntry(YamlDotNet.Serialization.ParsingEventStream,System.Func{YamlDotNet.Core.Events.Scalar,System.Boolean},YamlDotNet.Core.Events.Scalar@,YamlDotNet.Core.Events.ParsingEvent@)">
            <summary>
            Attempts to find the specified mapping entry
            </summary>
            <param name="parser">The <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/> to search</param>
            <param name="selector">A predicate <see cref="T:System.Func`2"/> used to search the <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/> for a specific <see cref="T:YamlDotNet.Core.Events.ParsingEvent"/></param>
            <param name="key">The key of the matching <see cref="T:YamlDotNet.Core.Events.Scalar"/></param>
            <param name="value">The matching <see cref="T:YamlDotNet.Core.Events.Scalar"/>'s <see cref="T:YamlDotNet.Core.Events.ParsingEvent"/> </param>
            <returns>A boolean indicating whether or not the specified mapping entry could be found</returns>
        </member>
        <member name="T:YamlDotNet.Serialization.Converters.Iso8601TimeSpanConverter">
            <summary>
            Represents an <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/> used to deserialize ISO8601 <see cref="T:System.TimeSpan"/>s
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.Converters.Iso8601TimeSpanConverter.#ctor(YamlDotNet.Serialization.INodeDeserializer)">
            <summary>
            Initializes a new <see cref="T:YamlDotNet.Serialization.Converters.Iso8601TimeSpanConverter"/>
            </summary>
            <param name="inner">The inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/></param>
        </member>
        <member name="P:YamlDotNet.Serialization.Converters.Iso8601TimeSpanConverter.Inner">
            <summary>
            Gets the inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/>
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.Converters.Iso8601TimeSpanConverter.Deserialize(YamlDotNet.Core.IParser,System.Type,System.Func{YamlDotNet.Core.IParser,System.Type,System.Object},System.Object@)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.Iso8601TimeSpanSerializer">
            <summary>
            Represents the <see cref="T:YamlDotNet.Serialization.IYamlTypeConverter"/> used to serialize ISO 8601 <see cref="T:System.TimeSpan"/>s
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.Iso8601TimeSpanSerializer.Accepts(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.Iso8601TimeSpanSerializer.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.Iso8601TimeSpanSerializer.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.JTokenDeserializer">
            <summary>
            Represents an <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/> used to deserialize <see cref="T:Newtonsoft.Json.Linq.JToken"/>s
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenDeserializer.#ctor(YamlDotNet.Serialization.INodeDeserializer)">
            <summary>
            Initializes a new <see cref="T:YamlDotNet.Serialization.JTokenDeserializer"/>
            </summary>
            <param name="inner">The inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/></param>
        </member>
        <member name="P:YamlDotNet.Serialization.JTokenDeserializer.Inner">
            <summary>
            Gets the inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/>
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenDeserializer.Deserialize(YamlDotNet.Core.IParser,System.Type,System.Func{YamlDotNet.Core.IParser,System.Type,System.Object},System.Object@)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.JTokenSerializer">
            <summary>
            Represents the <see cref="T:YamlDotNet.Serialization.IYamlTypeConverter"/> used to serialize <see cref="T:Newtonsoft.Json.Linq.JToken"/>s
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenSerializer.Accepts(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenSerializer.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenSerializer.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenSerializer.WriteJToken(YamlDotNet.Core.IEmitter,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Serializes the specified <see cref="T:Newtonsoft.Json.Linq.JToken"/>
            </summary>
            <param name="emitter">The current <see cref="T:YamlDotNet.Core.IEmitter"/></param>
            <param name="token">The <see cref="T:Newtonsoft.Json.Linq.JToken"/> to serialize</param>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenSerializer.WriteJArray(YamlDotNet.Core.IEmitter,Newtonsoft.Json.Linq.JArray)">
            <summary>
            Serializes the specified <see cref="T:Newtonsoft.Json.Linq.JArray"/>
            </summary>
            <param name="emitter">The current <see cref="T:YamlDotNet.Core.IEmitter"/></param>
            <param name="array">The <see cref="T:Newtonsoft.Json.Linq.JArray"/> to serialize</param>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenSerializer.WriteJObject(YamlDotNet.Core.IEmitter,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Serializes the specified <see cref="T:Newtonsoft.Json.Linq.JObject"/>
            </summary>
            <param name="emitter">The current <see cref="T:YamlDotNet.Core.IEmitter"/></param>
            <param name="jobject">The <see cref="T:Newtonsoft.Json.Linq.JObject"/> to serialize</param>
        </member>
        <member name="M:YamlDotNet.Serialization.JTokenSerializer.WriteJProperty(YamlDotNet.Core.IEmitter,Newtonsoft.Json.Linq.JProperty)">
            <summary>
            Serializes the specified <see cref="T:Newtonsoft.Json.Linq.JProperty"/>
            </summary>
            <param name="emitter">The current <see cref="T:YamlDotNet.Core.IEmitter"/></param>
            <param name="jproperty">The <see cref="T:Newtonsoft.Json.Linq.JProperty"/> to serialize</param>
        </member>
        <member name="T:YamlDotNet.Serialization.NonPublicConstructorObjectFactory">
            <summary>
            Represents an <see cref="T:YamlDotNet.Serialization.IObjectFactory"/> implementation that can create instance of objects with non-public parameterless constructors
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.NonPublicConstructorObjectFactory.Create(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.ParsingEventStream">
            <summary>
            Represents a replayable stream of <see cref="T:YamlDotNet.Core.Events.ParsingEvent"/>s
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.ParsingEventStream.#ctor(System.Collections.Generic.LinkedList{YamlDotNet.Core.Events.ParsingEvent})">
            <summary>
            Initializes a new <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/>
            </summary>
            <param name="events">A <see cref="T:System.Collections.Generic.LinkedList`1"/> containing the <see cref="T:YamlDotNet.Core.Events.ParsingEvent"/>s to stream</param>
        </member>
        <member name="P:YamlDotNet.Serialization.ParsingEventStream.Events">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.LinkedList`1"/> containing the <see cref="T:YamlDotNet.Core.Events.ParsingEvent"/>s to stream
            </summary>
        </member>
        <member name="P:YamlDotNet.Serialization.ParsingEventStream.Current">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.ParsingEventStream.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.ParsingEventStream.Reset">
            <summary>
            Resets the <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/>
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.ParsingEventStream.Create(YamlDotNet.Core.IParser)">
            <summary>
            Creates a new <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/> based on the specified <see cref="T:YamlDotNet.Core.IParser"/>
            </summary>
            <param name="parser">The <see cref="T:YamlDotNet.Core.IParser"/> based on which to create a new <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/></param>
            <returns>A new <see cref="T:YamlDotNet.Serialization.ParsingEventStream"/></returns>
        </member>
        <member name="T:YamlDotNet.Serialization.StringEnumSerializer">
            <summary>
            Represents the <see cref="T:YamlDotNet.Serialization.IYamlTypeConverter"/> used to serialize ISO 8601 <see cref="T:System.Enum"/>s
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.StringEnumSerializer.Accepts(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.StringEnumSerializer.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.StringEnumSerializer.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc/>
        </member>
    </members>
</doc>
