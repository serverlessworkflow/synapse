@* 
    Copyright © 2022-Present The Synapse Authors
    <p>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    <p>
    http://www.apache.org/licenses/LICENSE-2.0
    <p>
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@

@namespace Synapse.Dashboard
@inject IBreadcrumbService BreadcrumbService
@implements IDisposable
<nav class="pb-4" aria-label="breadcrumb">
    <ul class="breadcrumb">
        @foreach(var item in BreadcrumbService.Items) {
            <li class="breadcrumb-item">
                <a href="" @onclick="@(async() => await BreadcrumbService.NavigateTo(item))" @onclick:preventDefault>
                    @if (!String.IsNullOrWhiteSpace(item.Icon))
                    {
                        <small class="oi @item.Icon" aria-hidden="true"></small>
                    }
                    @item.Label
                </a>
            </li>
        }
    </ul>
</nav>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.BreadcrumbService.PropertyChanged += this.OnBreadcrumbChanged;
    }

    protected void OnBreadcrumbChanged(object? sender, PropertyChangedEventArgs args)
    {
        this.StateHasChanged();
    }

    public void Dispose()
    {
        if (this.BreadcrumbService != null)
            this.BreadcrumbService.PropertyChanged -= this.OnBreadcrumbChanged;
        GC.SuppressFinalize(this);
    }
}