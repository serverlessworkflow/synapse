@* 
    Copyright © 2022-Present The Synapse Authors
    <p>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    <p>
    http://www.apache.org/licenses/LICENSE-2.0
    <p>
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@

@namespace Synapse.Dashboard

@if (Parent.ActivePage == this)
{
    @ChildContent
}

@code 
{

    [CascadingParameter] private TabControl Parent { get; set; } = null!;

    [Parameter] public string? Header { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }

    private bool isActive;
    [Parameter] public bool IsActive { get; set; }

    protected override void OnInitialized()
    {
        if (this.Parent == null)
            throw new ArgumentNullException(nameof(Parent), "The TabPage component must exist within a TabControl");
        this.Parent.AddPage(this);
        base.OnInitialized();
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (this.isActive != this.IsActive)
        {
            this.isActive = this.IsActive;
            if (this.isActive && this.Parent.ActivePage != this)
                await this.Parent.ActivatePageAsync(this);
            this.StateHasChanged();
        } 
    }

}