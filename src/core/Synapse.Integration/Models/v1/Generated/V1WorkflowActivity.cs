
/*
 * Copyright © 2022-Present The Synapse Authors
 * <p>
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* -----------------------------------------------------------------------
 * This file has been automatically generated by a tool
 * -----------------------------------------------------------------------
 */

namespace Synapse.Integration.Models
{

	/// <summary>
	/// Describes a workflow activity
	/// </summary>
	[DataContract]
	[Queryable]
	public partial class V1WorkflowActivity
		: Entity
	{

		/// <summary>
		/// The id of the V1WorkflowInstance the V1WorkflowActivity belongs to
		/// </summary>
		[DataMember(Name = "workflowInstanceId", Order = 1)]
		[Description("The id of the V1WorkflowInstance the V1WorkflowActivity belongs to")]
		public virtual string WorkflowInstanceId { get; set; }

		/// <summary>
		/// The V1WorkflowActivity's type
		/// </summary>
		[DataMember(Name = "type", Order = 2)]
		[Description("The V1WorkflowActivity's type")]
		public virtual V1WorkflowActivityType Type { get; set; }

		/// <summary>
		/// The V1WorkflowActivity's status
		/// </summary>
		[DataMember(Name = "status", Order = 3)]
		[Description("The V1WorkflowActivity's status")]
		public virtual V1WorkflowActivityStatus Status { get; set; }

		/// <summary>
		/// The date and time at which the V1WorkflowActivity has started
		/// </summary>
		[DataMember(Name = "startedAt", Order = 4)]
		[Description("The date and time at which the V1WorkflowActivity has started")]
		public virtual DateTime? StartedAt { get; set; }

		/// <summary>
		/// The date and time at which the V1WorkflowActivity has been executed<para></para>  Value is set when the V1WorkflowActivity has been cancelled, faults or completes
		/// </summary>
		[DataMember(Name = "executedAt", Order = 5)]
		[Description("The date and time at which the V1WorkflowActivity has been executed<para></para>  Value is set when the V1WorkflowActivity has been cancelled, faults or completes")]
		public virtual DateTime? ExecutedAt { get; set; }

		/// <summary>
		/// The Error that caused the V1WorkflowActivity to end prematurily
		/// </summary>
		[DataMember(Name = "error", Order = 6)]
		[Description("The Error that caused the V1WorkflowActivity to end prematurily")]
		public virtual Error Error { get; set; }

		/// <summary>
		/// The V1WorkflowActivity's input
		/// </summary>
		[DataMember(Name = "input", Order = 7)]
		[Description("The V1WorkflowActivity's input")]
		public virtual Dynamic Input { get; set; }

		/// <summary>
		/// The V1WorkflowInstance's output
		/// </summary>
		[DataMember(Name = "output", Order = 8)]
		[Description("The V1WorkflowInstance's output")]
		public virtual Dynamic Output { get; set; }

		/// <summary>
		/// The V1WorkflowActivity's metadata
		/// </summary>
		[DataMember(Name = "metadata", Order = 9)]
		[Description("The V1WorkflowActivity's metadata")]
		public virtual NameValueCollection<string> Metadata { get; set; }

		/// <summary>
		/// The id of the V1WorkflowActivity's parent, if any
		/// </summary>
		[DataMember(Name = "parentId", Order = 10)]
		[Description("The id of the V1WorkflowActivity's parent, if any")]
		public virtual string ParentId { get; set; }

    }

}
